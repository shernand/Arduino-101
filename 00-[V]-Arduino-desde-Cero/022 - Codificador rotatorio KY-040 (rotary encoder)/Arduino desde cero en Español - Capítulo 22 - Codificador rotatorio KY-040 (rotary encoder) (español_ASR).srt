1
00:00:01,620 --> 00:00:08,039
hola a todos y bienvenidos al capítulo

2
00:00:04,559 --> 00:00:10,138
22 de arduino desde cero en español

3
00:00:08,039 --> 00:00:12,959
en esta oportunidad aprenderemos a

4
00:00:10,138 --> 00:00:15,449
utilizar el codificador rotatorio modelo

5
00:00:12,960 --> 00:00:18,420
cac-40 que forma parte del kit de

6
00:00:15,449 --> 00:00:20,460
sensores 37 en uno el cual nos servirá

7
00:00:18,420 --> 00:00:23,130
como dispositivo de entrada para

8
00:00:20,460 --> 00:00:25,440
determinar el giro de su eje y sentido

9
00:00:23,129 --> 00:00:27,929
del mismo en una primera vista parece

10
00:00:25,440 --> 00:00:30,210
ser como un potenciómetro del estilo que

11
00:00:27,929 --> 00:00:32,368
ya trabajamos con anterioridad si bien

12
00:00:30,210 --> 00:00:35,219
tiene un eje que lo podemos girar en

13
00:00:32,368 --> 00:00:38,039
sentido horario o antihorario del

14
00:00:35,219 --> 00:00:40,469
codificador genera señales digitales en

15
00:00:38,039 --> 00:00:43,588
lugar de ser una resistencia variable

16
00:00:40,469 --> 00:00:45,749
como es el potenciómetro al girar su eje

17
00:00:43,588 --> 00:00:49,198
sentiremos que el mismo da pequeños

18
00:00:45,749 --> 00:00:52,289
pasos o clicks donde se detiene de hecho

19
00:00:49,198 --> 00:00:55,039
el modelo que hay 40 requiere dar 30 de

20
00:00:52,289 --> 00:00:57,780
estos pasos para dar un giro completo de

21
00:00:55,039 --> 00:01:00,120
360 grados otra diferencia con el

22
00:00:57,780 --> 00:01:03,149
potenciómetro convencional es que no

23
00:01:00,119 --> 00:01:05,909
tiene topes se lo puede girar libremente

24
00:01:03,149 --> 00:01:08,489
en cualquier sentido sin llegar nunca a

25
00:01:05,909 --> 00:01:11,158
un límite esto hace que tampoco

26
00:01:08,489 --> 00:01:13,019
una posición absoluta siempre será

27
00:01:11,159 --> 00:01:14,868
relativa al valor anterior

28
00:01:13,019 --> 00:01:17,609
el módulo consta del codificador

29
00:01:14,868 --> 00:01:20,609
rotatorio montado sobre una placa de

30
00:01:17,609 --> 00:01:23,159
circuito impreso con dos resistencias en

31
00:01:20,609 --> 00:01:25,560
su parte posterior y cinco pines de

32
00:01:23,159 --> 00:01:28,560
conexión incluye también un interruptor

33
00:01:25,560 --> 00:01:31,320
simple normal abierto que se activa al

34
00:01:28,560 --> 00:01:32,399
presionar el eje y está conectado en uno

35
00:01:31,319 --> 00:01:35,099
de sus extremos

36
00:01:32,399 --> 00:01:37,560
ag nd debemos entender el principio de

37
00:01:35,099 --> 00:01:39,319
funcionamiento del codificador rotatorio

38
00:01:37,560 --> 00:01:41,609
para poder aplicarlo en la práctica

39
00:01:39,319 --> 00:01:44,489
existen modelos de diversos fabricantes

40
00:01:41,609 --> 00:01:46,829
y la denominación de sus pines suele

41
00:01:44,489 --> 00:01:51,359
variar por eso se los describe de forma

42
00:01:46,829 --> 00:01:53,819
genérica como pines a b y c luego en el

43
00:01:51,359 --> 00:01:57,209
circuito de conexión veremos como es la

44
00:01:53,819 --> 00:02:00,118
denominación particular del cac-40 los

45
00:01:57,209 --> 00:02:03,359
pines y b son los denominados de señal

46
00:02:00,118 --> 00:02:06,118
mientras que se es el común se está

47
00:02:03,359 --> 00:02:08,519
conectado eléctricamente a este plato

48
00:02:06,118 --> 00:02:11,159
dentado que está representado en el

49
00:02:08,519 --> 00:02:13,739
gráfico con color amarillo muy parecido

50
00:02:11,159 --> 00:02:15,900
a un engranaje mecánico todo este plato

51
00:02:13,739 --> 00:02:18,539
dentado es el terminal

52
00:02:15,900 --> 00:02:21,090
y dicho terminal se encuentra conectado

53
00:02:18,539 --> 00:02:24,030
a genere del módulo luego tenemos los

54
00:02:21,090 --> 00:02:26,640
pines y b están representados con estos

55
00:02:24,030 --> 00:02:29,039
círculos de color negro serán conexiones

56
00:02:26,639 --> 00:02:31,438
eléctricas que estando tal cual como se

57
00:02:29,039 --> 00:02:33,989
muestra en la imagen no se tocan entre

58
00:02:31,438 --> 00:02:36,688
sí ni tampoco hacen contacto con el

59
00:02:33,989 --> 00:02:39,628
terminal c de cada uno de los pines a

60
00:02:36,688 --> 00:02:41,969
ive se conectan dos resistencias de 10 k

61
00:02:39,628 --> 00:02:44,039
al positivo de tensión estas

62
00:02:41,969 --> 00:02:46,318
resistencias no forman parte del

63
00:02:44,039 --> 00:02:48,900
codificador si ves la parte posterior

64
00:02:46,318 --> 00:02:52,250
del módulo están de forma externa

65
00:02:48,900 --> 00:02:54,900
en definitiva tendremos 3 pines a&amp;b

66
00:02:52,250 --> 00:02:57,959
conectados mediante resistencias de pull

67
00:02:54,900 --> 00:03:00,539
up y se conectado a gene de como todo

68
00:02:57,959 --> 00:03:02,908
dispositivo rotatorio el sentido de giro

69
00:03:00,539 --> 00:03:05,638
se indica en función del giro de las

70
00:03:02,908 --> 00:03:07,888
manecillas del reloj cuando algo gira no

71
00:03:05,639 --> 00:03:10,829
se dice que lo hace a derecha o

72
00:03:07,889 --> 00:03:13,530
izquierda sino que lo hace horario es

73
00:03:10,829 --> 00:03:15,810
decir en el mismo sentido en que giran

74
00:03:13,530 --> 00:03:18,419
las manecillas de un reloj o antihorario

75
00:03:15,810 --> 00:03:21,680
que es el sentido contrario entre

76
00:03:18,419 --> 00:03:24,949
paréntesis están las siglas en inglés

77
00:03:21,680 --> 00:03:28,099
white para sentido horario y counter

78
00:03:24,949 --> 00:03:30,229
clock white para sentido antihorario en

79
00:03:28,098 --> 00:03:32,810
mucha documentación que encuentres en

80
00:03:30,229 --> 00:03:35,000
idioma inglés lo verás con dichas siglas

81
00:03:32,810 --> 00:03:36,979
y vale la pena mencionarlo vamos a

82
00:03:35,000 --> 00:03:39,979
comenzar a girar el eje del codificador

83
00:03:36,979 --> 00:03:42,378
y ver cómo se van generando las señales

84
00:03:39,979 --> 00:03:44,298
sobre los pines ahí ve sobre la

85
00:03:42,378 --> 00:03:47,298
izquierda vemos el gráfico del

86
00:03:44,299 --> 00:03:49,938
codificador y sobre derecha un gráfico

87
00:03:47,299 --> 00:03:53,150
que muestra el valor de la señal sobre a

88
00:03:49,938 --> 00:03:56,180
ive en función del tiempo sobre el eje

89
00:03:53,150 --> 00:03:58,510
vertical tendremos arriba la señal a y

90
00:03:56,180 --> 00:04:01,280
por debajo la señal ve el eje horizontal

91
00:03:58,509 --> 00:04:04,280
será el tiempo si iniciamos con el

92
00:04:01,280 --> 00:04:07,340
codificador en esta posición vemos que a

93
00:04:04,280 --> 00:04:09,979
ive tienen un nivel alto ya que están

94
00:04:07,340 --> 00:04:13,340
conectadas mediante las resistencias a

95
00:04:09,979 --> 00:04:15,828
veces el plato dentado conectado a gene

96
00:04:13,340 --> 00:04:18,250
d no está haciendo contacto con ninguno

97
00:04:15,829 --> 00:04:21,978
de los terminales por eso con color azul

98
00:04:18,250 --> 00:04:24,709
mostramos una línea tanto en a como en

99
00:04:21,978 --> 00:04:27,319
be indicando un nivel alto en ambos

100
00:04:24,709 --> 00:04:28,489
pines para ser consistentes que se

101
00:04:27,319 --> 00:04:30,649
entienda mejor

102
00:04:28,490 --> 00:04:33,228
estaré dibujando siempre con color azul

103
00:04:30,649 --> 00:04:35,899
las señales cuando se esté girando el

104
00:04:33,228 --> 00:04:38,538
codificador en sentido horario si ahora

105
00:04:35,899 --> 00:04:40,848
comenzamos a girar el eje conectado

106
00:04:38,538 --> 00:04:44,060
directamente al plato dentado del

107
00:04:40,848 --> 00:04:46,939
terminal c veremos que ahora el pin a

108
00:04:44,060 --> 00:04:49,939
está haciendo contacto eléctrico con ce

109
00:04:46,939 --> 00:04:53,810
con lo cual a que tiene un nivel alto

110
00:04:49,939 --> 00:04:57,379
pasa a un nivel bajo a hice conectados

111
00:04:53,810 --> 00:04:59,930
hacen que a pase a un nivel de 0 volts y

112
00:04:57,379 --> 00:05:02,658
es justamente lo que vemos en esta parte

113
00:04:59,930 --> 00:05:05,360
del gráfico pasado un nivel alto a 1

114
00:05:02,658 --> 00:05:06,079
bajo pero de forma interesante presta

115
00:05:05,360 --> 00:05:09,229
atención

116
00:05:06,079 --> 00:05:11,930
el terminal b aún no hizo contacto con

117
00:05:09,228 --> 00:05:14,508
el terminal c sigue estando con un nivel

118
00:05:11,930 --> 00:05:17,090
alto a través de la resistencia de pull

119
00:05:14,509 --> 00:05:19,610
up por eso en el gráfico de la señal ve

120
00:05:17,089 --> 00:05:22,818
la mantenemos con un nivel alto y ya

121
00:05:19,610 --> 00:05:25,580
empieza a ser notorio que a y b tendrán

122
00:05:22,819 --> 00:05:28,009
un comportamiento distinto a medida que

123
00:05:25,579 --> 00:05:30,948
se gire el eje si ahora giramos un poco

124
00:05:28,009 --> 00:05:33,680
más tanto a como b están tocando con el

125
00:05:30,949 --> 00:05:34,939
terminal c por ende enviando dichos

126
00:05:33,680 --> 00:05:37,639
pines a genes

127
00:05:34,939 --> 00:05:40,339
con lo cual en el gráfico veremos que a

128
00:05:37,639 --> 00:05:42,879
que venía con un nivel bajo sigue

129
00:05:40,339 --> 00:05:47,060
manteniendo dicho estado y recién ahora

130
00:05:42,879 --> 00:05:50,180
ve pasa de alto a bajo continuando el

131
00:05:47,060 --> 00:05:53,240
giro ahora a deja de hacer contacto con

132
00:05:50,180 --> 00:05:56,090
el terminal c el plato dentado con lo

133
00:05:53,240 --> 00:05:58,819
cual vuelve a un nivel lógico alto pero

134
00:05:56,089 --> 00:06:00,349
ve sigue tocando con ce con lo cual

135
00:05:58,819 --> 00:06:02,300
permanece en bajo

136
00:06:00,350 --> 00:06:04,460
finalmente si continuamos girando un

137
00:06:02,300 --> 00:06:07,460
poco más veremos cómo estamos en el

138
00:06:04,459 --> 00:06:10,609
estado inicial con los terminales a y b

139
00:06:07,459 --> 00:06:13,639
no haciendo contacto con ce por ende con

140
00:06:10,610 --> 00:06:16,100
ambos con un nivel lógico alto como se

141
00:06:13,639 --> 00:06:18,620
muestra en esta parte del gráfico cuando

142
00:06:16,100 --> 00:06:20,689
miren los gráficos de las señales a ive

143
00:06:18,620 --> 00:06:24,050
lo importante es que prestes atención

144
00:06:20,689 --> 00:06:27,319
cuando la señal pasa de alto abajo

145
00:06:24,050 --> 00:06:29,900
recordad que tanto a como b están todo

146
00:06:27,319 --> 00:06:32,480
el tiempo en alto solo cuando giramos el

147
00:06:29,899 --> 00:06:34,819
eje logramos que pasen a niveles bajos

148
00:06:32,480 --> 00:06:37,069
muchas veces estamos acostumbrados a

149
00:06:34,819 --> 00:06:38,719
decir que hay un pulso cuando vemos que

150
00:06:37,069 --> 00:06:41,839
pasa de un nivel bajo

151
00:06:38,720 --> 00:06:44,990
alto pero aquí es al revés el pulso se

152
00:06:41,839 --> 00:06:47,060
genera cuando pasa de alto a bajo de

153
00:06:44,990 --> 00:06:49,310
todo esto que vimos me interesa que te

154
00:06:47,060 --> 00:06:51,709
quedes con el siguiente concepto cuando

155
00:06:49,310 --> 00:06:54,620
giramos el codificador en sentido

156
00:06:51,709 --> 00:06:55,819
horario primero ocurre el pulso en el

157
00:06:54,620 --> 00:06:58,670
terminal

158
00:06:55,819 --> 00:07:00,409
y luego más tarde ocurre sobre b y lo

159
00:06:58,670 --> 00:07:03,170
representamos de la siguiente forma

160
00:07:00,410 --> 00:07:05,960
primero ocurre a y luego ve ahora

161
00:07:03,170 --> 00:07:08,629
giremos en sentido antihorario y verás

162
00:07:05,959 --> 00:07:11,060
porque es importante quedarse con este

163
00:07:08,629 --> 00:07:13,759
concepto antes de continuar debo

164
00:07:11,060 --> 00:07:17,300
aclararte que estas señales que vimos en

165
00:07:13,759 --> 00:07:19,789
a y en be ocurren únicamente durante la

166
00:07:17,300 --> 00:07:22,009
transición de un paso a otro del

167
00:07:19,790 --> 00:07:23,960
codificador es decir que no podemos

168
00:07:22,009 --> 00:07:26,389
detener el giro en una posición

169
00:07:23,959 --> 00:07:29,599
intermedia con lo cual la generación de

170
00:07:26,389 --> 00:07:32,509
las señales ocurre muy rápidamente entre

171
00:07:29,600 --> 00:07:34,760
un paso o click y el siguiente en el

172
00:07:32,509 --> 00:07:37,250
gráfico por cuestiones didácticas el

173
00:07:34,759 --> 00:07:40,699
plato dentado tiene cuatro posiciones

174
00:07:37,250 --> 00:07:44,629
donde a ive no hacen contacto pero en

175
00:07:40,699 --> 00:07:46,939
realidad el plato tiene 30 posiciones

176
00:07:44,629 --> 00:07:49,279
si te quedó alguna duda ahora que

177
00:07:46,939 --> 00:07:52,040
hagamos el proceso de girar en sentido

178
00:07:49,279 --> 00:07:54,500
antihorario seguramente se te despejará

179
00:07:52,040 --> 00:07:57,140
para este caso comenzaremos en la misma

180
00:07:54,500 --> 00:08:00,170
posición de reposo con ambos terminales

181
00:07:57,139 --> 00:08:03,079
a y b sin hacer contacto con el plato

182
00:08:00,170 --> 00:08:04,759
dentado las señales a ive ahora las

183
00:08:03,079 --> 00:08:07,639
dibujar es de color rojo para

184
00:08:04,759 --> 00:08:10,279
diferenciar tanto a como b tendrán un

185
00:08:07,639 --> 00:08:12,500
nivel alto al estar conectadas a veces

186
00:08:10,279 --> 00:08:14,689
mediante las resistencias de pull up

187
00:08:12,500 --> 00:08:17,810
comencemos a girar en sentido

188
00:08:14,689 --> 00:08:20,240
antihorario o counter clock quite el

189
00:08:17,810 --> 00:08:23,089
primer terminal que hace contacto con el

190
00:08:20,240 --> 00:08:25,189
plato dentado es b con lo cual en el

191
00:08:23,089 --> 00:08:28,729
gráfico lo hacemos pasar de un nivel

192
00:08:25,189 --> 00:08:31,519
alto a uno bajo pero a aún sigue sin

193
00:08:28,730 --> 00:08:34,550
hacer contacto con lo cual mantiene su

194
00:08:31,519 --> 00:08:36,259
nivel alto si continuamos ahora ambos

195
00:08:34,549 --> 00:08:39,199
terminales se están tocando con el

196
00:08:36,259 --> 00:08:42,288
terminal se haciendo que ambos tengan un

197
00:08:39,200 --> 00:08:44,750
nivel bajo ve ya tenía un nivel bajo con

198
00:08:42,288 --> 00:08:47,449
lo cual lo mantiene y ya que venía con

199
00:08:44,750 --> 00:08:49,429
un nivel alto pasa a uno bajo como se

200
00:08:47,450 --> 00:08:50,840
muestra en la imagen si seguimos girando

201
00:08:49,429 --> 00:08:53,389
b

202
00:08:50,840 --> 00:08:56,540
hacer contacto con lo cual pasó a un

203
00:08:53,389 --> 00:08:59,539
nivel alto y sigue con su contacto con

204
00:08:56,539 --> 00:09:01,490
genere con lo cual sigue en bajo

205
00:08:59,539 --> 00:09:04,759
finalmente llegamos a la posición

206
00:09:01,490 --> 00:09:07,430
inicial con ambos terminales a y b con

207
00:09:04,759 --> 00:09:09,710
un nivel alto la diferencia que se nota

208
00:09:07,429 --> 00:09:13,089
es que ahora que giramos en sentido

209
00:09:09,710 --> 00:09:16,220
antihorario primero sucede ve y luego a

210
00:09:13,090 --> 00:09:19,160
exactamente opuesto a cuando gira vamos

211
00:09:16,220 --> 00:09:22,250
en sentido horario y esa es la forma de

212
00:09:19,159 --> 00:09:24,949
determinar el sentido de giro si primero

213
00:09:22,250 --> 00:09:27,289
ocurre el pulso a entonces estaremos

214
00:09:24,950 --> 00:09:29,780
girando en sentido horario si primero

215
00:09:27,289 --> 00:09:32,659
ocurre el pulso b entonces estaremos

216
00:09:29,779 --> 00:09:35,569
girando en sentido antihorario para

217
00:09:32,659 --> 00:09:38,659
resumir veamos esta imagen donde tenemos

218
00:09:35,570 --> 00:09:41,810
las señales generadas en los pines ahí

219
00:09:38,659 --> 00:09:44,299
ve girando en sentido horario con color

220
00:09:41,809 --> 00:09:47,139
azul y girando en sentido antihorario

221
00:09:44,299 --> 00:09:50,209
con color rojo la aplicación práctica

222
00:09:47,139 --> 00:09:53,539
será muy simple utilizaremos como

223
00:09:50,210 --> 00:09:56,300
referencia la señal sobre el pin up para

224
00:09:53,539 --> 00:09:57,349
disparar una interrupción cuando detecte

225
00:09:56,299 --> 00:09:59,899
un nivel bajo

226
00:09:57,350 --> 00:10:02,090
cuando eso ocurra sabemos que se está

227
00:09:59,899 --> 00:10:04,549
girando el codificador pero además

228
00:10:02,090 --> 00:10:07,220
debemos determinar en qué sentido lo

229
00:10:04,549 --> 00:10:10,579
está haciendo y eso será muy fácil

230
00:10:07,220 --> 00:10:13,310
haremos una consulta al pin b y si está

231
00:10:10,580 --> 00:10:16,040
con un nivel alto entonces sabemos que

232
00:10:13,309 --> 00:10:19,219
el giro es horario si el pin b tiene un

233
00:10:16,039 --> 00:10:21,769
nivel bajo entonces será antihorario el

234
00:10:19,220 --> 00:10:24,889
concepto de interrupciones externas lo

235
00:10:21,769 --> 00:10:26,720
vimos en detalle en el capítulo 21 muy

236
00:10:24,889 --> 00:10:29,240
bien ahora que ya aprendimos el

237
00:10:26,720 --> 00:10:31,129
principio de funcionamiento y una idea

238
00:10:29,240 --> 00:10:33,769
de cómo lo implementaremos en la

239
00:10:31,129 --> 00:10:36,919
programación vamos a conectar el módulo

240
00:10:33,769 --> 00:10:39,439
arduino estaré usando el módulo k y 40

241
00:10:36,919 --> 00:10:42,229
pero también es válido si en tu caso

242
00:10:39,440 --> 00:10:45,110
dispones del codificador rotatorio solo

243
00:10:42,230 --> 00:10:48,190
sin módulo en dicho caso deberás

244
00:10:45,110 --> 00:10:51,019
conectar los pines a y b mediante

245
00:10:48,190 --> 00:10:54,230
resistencias de 10 k al positivo de

246
00:10:51,019 --> 00:10:55,759
tensión y el terminal se amasa no

247
00:10:54,230 --> 00:10:58,340
estaremos conectando el pulsador

248
00:10:55,759 --> 00:11:00,679
incorporado para no complicar el código

249
00:10:58,340 --> 00:11:03,670
pero se trata de un pulsador simple

250
00:11:00,679 --> 00:11:07,879
normal abierto con uno de sus extremos

251
00:11:03,669 --> 00:11:10,699
2nd internamente con lo cual el pin s w

252
00:11:07,879 --> 00:11:13,338
del módulo está al aire y debemos

253
00:11:10,700 --> 00:11:15,440
conectarlo con una resistencia de 10 k

254
00:11:13,339 --> 00:11:17,450
al positivo de tensión

255
00:11:15,440 --> 00:11:20,390
si queremos usarlo el pin de la

256
00:11:17,450 --> 00:11:23,390
izquierda con la indicación n de irá con

257
00:11:20,389 --> 00:11:26,809
un cable directo a gene de arduino el

258
00:11:23,389 --> 00:11:28,460
pin con el símbolo de más a 5 volts de

259
00:11:26,809 --> 00:11:30,979
arduino s w

260
00:11:28,460 --> 00:11:34,250
no lo conectaremos luego el pin

261
00:11:30,980 --> 00:11:38,240
denominado dt irá con un cable directo

262
00:11:34,250 --> 00:11:43,100
al pin digital número 2 y finalmente el

263
00:11:38,240 --> 00:11:45,830
pin clk al pin digital número 4 y eso es

264
00:11:43,100 --> 00:11:48,440
todo para la conexión en el editor te

265
00:11:45,830 --> 00:11:50,720
está demostrando la totalidad del código

266
00:11:48,440 --> 00:11:53,210
iremos línea por línea como siempre

267
00:11:50,720 --> 00:11:56,389
declaramos una variable entera con el

268
00:11:53,210 --> 00:11:58,879
nombre a y le asignamos el número 2 ya

269
00:11:56,389 --> 00:12:01,039
que es el pin digital número 2 donde

270
00:11:58,879 --> 00:12:03,799
tenemos conectado el pin

271
00:12:01,039 --> 00:12:07,039
dt del módulo que será el equivalente a

272
00:12:03,799 --> 00:12:10,338
la señal que vimos con anterioridad en b

273
00:12:07,039 --> 00:12:13,549
asignamos el número 4 que corresponderá

274
00:12:10,339 --> 00:12:16,100
pincel ek del módulo luego una variable

275
00:12:13,549 --> 00:12:18,528
llamada anterior que la usaremos para

276
00:12:16,100 --> 00:12:21,319
guardar el último valor leído de la

277
00:12:18,528 --> 00:12:24,139
variable posición de esa manera podremos

278
00:12:21,318 --> 00:12:26,179
escribir en el monitor serial únicamente

279
00:12:24,139 --> 00:12:28,698
cuando el valor de posición haya

280
00:12:26,179 --> 00:12:30,799
cambiado finalmente nos queda la

281
00:12:28,698 --> 00:12:33,828
variable que usaremos tanto dentro del

282
00:12:30,799 --> 00:12:36,258
look como dentro de la función y ese ere

283
00:12:33,828 --> 00:12:38,688
cuando se produzca la interrupción será

284
00:12:36,259 --> 00:12:41,568
del tipo entera y con el modificador

285
00:12:38,688 --> 00:12:44,360
bola tail para hacerla global con el

286
00:12:41,568 --> 00:12:47,299
nombre posición y le asignamos también

287
00:12:44,360 --> 00:12:49,999
un valor inicial de 50 recordad que el

288
00:12:47,299 --> 00:12:52,188
codificador no tiene topes con lo cual

289
00:12:49,999 --> 00:12:54,920
tampoco referencia inicial de su

290
00:12:52,188 --> 00:12:57,610
posición por eso le asignamos ahora un

291
00:12:54,919 --> 00:13:00,649
valor en el setup mediante pin mode

292
00:12:57,610 --> 00:13:03,259
establecemos tanto a como ve como

293
00:13:00,649 --> 00:13:06,230
entradas inicializa moss la comunicación

294
00:13:03,259 --> 00:13:08,899
serie a 9.600 bajo dios y luego

295
00:13:06,230 --> 00:13:11,539
adjuntamos la interrupción que será

296
00:13:08,899 --> 00:13:15,080
sobre el pin a con el nombre de función

297
00:13:11,539 --> 00:13:18,259
y ese ere el poder y con modo

298
00:13:15,080 --> 00:13:21,379
y finalmente con sería el punto pink

299
00:13:18,259 --> 00:13:23,539
line escribimos listo de manera que

300
00:13:21,379 --> 00:13:25,879
sepamos que ya se encuentra todo en

301
00:13:23,539 --> 00:13:28,819
orden para comenzar el loop será muy

302
00:13:25,879 --> 00:13:31,580
simple lo único que debemos consultar es

303
00:13:28,820 --> 00:13:33,980
si el valor de posición es distinto del

304
00:13:31,580 --> 00:13:36,830
día anterior cuando dicha situación sea

305
00:13:33,980 --> 00:13:39,800
verdadera escribiremos el monitor serial

306
00:13:36,830 --> 00:13:42,590
el valor de posición y actualizamos el

307
00:13:39,799 --> 00:13:45,289
valor de anterior composición y eso es

308
00:13:42,590 --> 00:13:48,350
todo ahora dentro de la función y ese

309
00:13:45,289 --> 00:13:50,659
ere llamada encoder tendremos la parte

310
00:13:48,350 --> 00:13:53,149
más importante del programa hay varias

311
00:13:50,659 --> 00:13:55,370
líneas comentadas por ahora te voy a

312
00:13:53,149 --> 00:13:58,009
pedir que no le prestes atención y en

313
00:13:55,370 --> 00:13:59,000
breve explicaré de qué se trata a esta

314
00:13:58,009 --> 00:14:01,939
función

315
00:13:59,000 --> 00:14:04,580
llegaremos cada vez que la señal a pasar

316
00:14:01,940 --> 00:14:07,010
a un estado bajo para recordar un poco

317
00:14:04,580 --> 00:14:10,040
el comportamiento de las señales traer a

318
00:14:07,009 --> 00:14:12,139
la pantalla una versión reducida de lo

319
00:14:10,039 --> 00:14:14,750
que sacamos como conclusión del

320
00:14:12,139 --> 00:14:17,899
principio de funcionamiento si vemos la

321
00:14:14,750 --> 00:14:22,149
señal en color azul que corresponde al

322
00:14:17,899 --> 00:14:25,189
giro en sentido horario a tiene un nivel

323
00:14:22,149 --> 00:14:27,649
tiene un nivel alto y ahora vemos la

324
00:14:25,190 --> 00:14:30,110
señal en color rojo que corresponde al

325
00:14:27,649 --> 00:14:33,649
giro en sentido antihorario se puede

326
00:14:30,110 --> 00:14:36,740
apreciar que si a tiene un nivel bajo ve

327
00:14:33,649 --> 00:14:39,139
también tiene un nivel bajo y esa es la

328
00:14:36,740 --> 00:14:42,560
lógica que aplicaremos aquí solo debemos

329
00:14:39,139 --> 00:14:45,019
consultar mediante una sentencia if el

330
00:14:42,559 --> 00:14:47,929
valor de b si tiene un nivel alto

331
00:14:45,019 --> 00:14:50,509
entonces estamos en sentido horario con

332
00:14:47,929 --> 00:14:54,349
lo cual simplemente incrementamos el

333
00:14:50,509 --> 00:14:57,470
valor de posición en 1 con posición

334
00:14:54,350 --> 00:15:00,079
+ + luego al else llegaremos si la

335
00:14:57,470 --> 00:15:03,139
condición de lift no es verdadera es

336
00:15:00,078 --> 00:15:06,289
decir que b tiene un nivel bajo en este

337
00:15:03,139 --> 00:15:10,549
caso de incrementarlos en 1 el valor de

338
00:15:06,289 --> 00:15:13,099
posición con posición menos menos y con

339
00:15:10,549 --> 00:15:15,769
eso tendríamos la totalidad del código

340
00:15:13,100 --> 00:15:17,990
si los hubiésemos arduino en la práctica

341
00:15:15,769 --> 00:15:20,570
veríamos que al girar el encuadre

342
00:15:17,990 --> 00:15:22,970
funcionaría de forma errática si lo

343
00:15:20,570 --> 00:15:25,310
giremos en sentido horario una posición

344
00:15:22,970 --> 00:15:27,889
veíamos que el valor mostrado en el

345
00:15:25,309 --> 00:15:28,338
monitor serial incrementaría en mucho

346
00:15:27,889 --> 00:15:31,338
más

347
00:15:28,339 --> 00:15:33,589
de uno quizás tres o cuatro esto es

348
00:15:31,339 --> 00:15:35,779
debido a la construcción mecánica del

349
00:15:33,589 --> 00:15:37,819
incoder rotatorio las conexiones

350
00:15:35,778 --> 00:15:40,789
internas que permiten generar las

351
00:15:37,818 --> 00:15:43,610
señales a ibex son mediante una serie de

352
00:15:40,789 --> 00:15:46,068
contactos mecánicos se generan rebotes

353
00:15:43,610 --> 00:15:48,680
de manera que deberemos utilizar una

354
00:15:46,068 --> 00:15:51,259
rutina anti rebote de manera tal que si

355
00:15:48,679 --> 00:15:54,318
detectamos un pulso y casi de forma

356
00:15:51,259 --> 00:15:56,930
inmediata detectamos otro entonces

357
00:15:54,318 --> 00:15:59,299
sabemos que ese segundo pulso debe

358
00:15:56,929 --> 00:16:01,698
desestimarse ya que es producto de un

359
00:15:59,299 --> 00:16:04,278
rebote la aplicación de la rutina anti

360
00:16:01,698 --> 00:16:04,969
rebote es muy simple pondremos todo el

361
00:16:04,278 --> 00:16:08,629
bloque

362
00:16:04,970 --> 00:16:11,449
dentro de otra sentencia donde evaluará

363
00:16:08,629 --> 00:16:13,730
verdadero únicamente si el tiempo entre

364
00:16:11,448 --> 00:16:16,789
pulsos en nuestro caso entre

365
00:16:13,730 --> 00:16:19,879
interrupciones es mayor a 5 milisegundos

366
00:16:16,789 --> 00:16:22,129
si luego de una interrupción viniese

367
00:16:19,879 --> 00:16:25,129
otra interrupción por ejemplo con

368
00:16:22,129 --> 00:16:27,528
diferencia de 3 milisegundos sabemos que

369
00:16:25,129 --> 00:16:30,199
se trata de un rebote y lo desestimamos

370
00:16:27,528 --> 00:16:33,980
para activar la rutina vamos a dzeko

371
00:16:30,198 --> 00:16:36,379
mentar la línea del if y luego más abajo

372
00:16:33,980 --> 00:16:38,690
llame de cierre de la misma y la línea

373
00:16:36,379 --> 00:16:41,480
anterior verás que la condición del if

374
00:16:38,690 --> 00:16:44,870
es la resta de dos variables una con el

375
00:16:41,480 --> 00:16:48,110
nombre de tiempo interrupción y otra con

376
00:16:44,870 --> 00:16:50,330
el nombre de última interrupción estas

377
00:16:48,110 --> 00:16:53,210
dos variables están definidas al

378
00:16:50,330 --> 00:16:55,759
principio así que les comentamos sus

379
00:16:53,210 --> 00:16:57,440
líneas dijimos que la idea es calcular

380
00:16:55,759 --> 00:17:00,080
el tiempo que transcurre entre

381
00:16:57,440 --> 00:17:02,990
interrupción e interrupción para eso

382
00:17:00,080 --> 00:17:05,180
utilizaremos una función llamada milis

383
00:17:02,990 --> 00:17:06,980
esta función devuelve el tiempo

384
00:17:05,180 --> 00:17:09,529
transcurrido desde el inicio del

385
00:17:06,980 --> 00:17:12,049
programa en milisegundos como esta

386
00:17:09,529 --> 00:17:14,450
función devuelve un número que es cada

387
00:17:12,049 --> 00:17:17,089
vez más grande a medida que pasa el

388
00:17:14,450 --> 00:17:20,420
tiempo debe ser siempre definida del

389
00:17:17,089 --> 00:17:22,849
tipo ansa jmg long nosotros estamos

390
00:17:20,420 --> 00:17:26,269
acostumbrados a usar la variable entera

391
00:17:22,849 --> 00:17:29,179
int que tiene una longitud de 16 bits

392
00:17:26,269 --> 00:17:32,690
una variable long tiene una longitud de

393
00:17:29,180 --> 00:17:35,840
32 bits al definirla command saint es

394
00:17:32,690 --> 00:17:37,970
decir sin signos utilizamos la totalidad

395
00:17:35,839 --> 00:17:39,919
de los 32 bits de longitud de la

396
00:17:37,970 --> 00:17:40,700
variable esto nos da que podemos

397
00:17:39,920 --> 00:17:43,820
almacenar

398
00:17:40,700 --> 00:17:47,870
a un número tan grande como cerca de

399
00:17:43,819 --> 00:17:50,089
4.300 millones como miles devuelve el

400
00:17:47,869 --> 00:17:52,609
tiempo transcurrido desde el inicio del

401
00:17:50,089 --> 00:17:55,189
programa en milisegundos es fácil ver

402
00:17:52,609 --> 00:17:57,740
por qué necesitamos una variable que

403
00:17:55,190 --> 00:18:00,500
puede almacenar un número tan grande te

404
00:17:57,740 --> 00:18:02,599
preguntarás quizás como una función que

405
00:18:00,500 --> 00:18:04,940
sólo devuelve el tiempo transcurrido

406
00:18:02,599 --> 00:18:06,619
desde el inicio del programa nos sirve

407
00:18:04,940 --> 00:18:09,170
para determinar el tiempo entre

408
00:18:06,619 --> 00:18:12,229
interrupciones y la respuesta es tomando

409
00:18:09,170 --> 00:18:15,019
la diferencia de tiempo entre llamados a

410
00:18:12,230 --> 00:18:17,930
la función si llamamos a la función mil

411
00:18:15,019 --> 00:18:21,109
y luego de cinco segundos de iniciado el

412
00:18:17,930 --> 00:18:23,750
programa nos devuelve 5000 si llamamos

413
00:18:21,109 --> 00:18:26,619
de nuevo la función miles dos segundos

414
00:18:23,750 --> 00:18:29,299
después nos devuelve 7000 ya que

415
00:18:26,619 --> 00:18:31,129
transcurrieron siete segundos desde el

416
00:18:29,299 --> 00:18:34,669
inicio del programa si ahora hacemos

417
00:18:31,130 --> 00:18:37,400
7000 menos 5000 nos da 2000 que

418
00:18:34,670 --> 00:18:38,630
justamente el tiempo entre llamados a la

419
00:18:37,400 --> 00:18:40,910
misma función

420
00:18:38,630 --> 00:18:43,400
de esta manera obtendremos el tiempo que

421
00:18:40,910 --> 00:18:46,220
transcurre entre interrupciones en la

422
00:18:43,400 --> 00:18:47,330
variable tiempo interrupción almacenamos

423
00:18:46,220 --> 00:18:49,610
el valor devuelto

424
00:18:47,329 --> 00:18:50,419
por mi lis al momento que ocurre la

425
00:18:49,609 --> 00:18:52,819
interrupción

426
00:18:50,420 --> 00:18:56,000
luego guardamos en una segunda variable

427
00:18:52,819 --> 00:18:58,220
llamada última interrupción este valor

428
00:18:56,000 --> 00:19:00,650
cuando vuelvo a otra interrupción en

429
00:18:58,220 --> 00:19:03,079
tiempo interrupción tenemos el valor

430
00:19:00,650 --> 00:19:06,110
actual que siempre será mayor que la

431
00:19:03,079 --> 00:19:08,179
anterior y así simplemente restando los

432
00:19:06,109 --> 00:19:10,099
valores obtenemos el tiempo entre

433
00:19:08,180 --> 00:19:11,960
interrupciones sólo nos quedará

434
00:19:10,099 --> 00:19:14,659
actualizar el valor de última

435
00:19:11,960 --> 00:19:16,490
interrupción con el valor actualizado de

436
00:19:14,660 --> 00:19:19,160
tiempo interrupción

437
00:19:16,490 --> 00:19:21,500
este método es perfectamente aplicable

438
00:19:19,160 --> 00:19:23,600
para cualquier circuito eléctrico que

439
00:19:21,500 --> 00:19:25,970
tiene contactos mecánicos como los

440
00:19:23,599 --> 00:19:28,219
pulsadores es por ese motivo que le

441
00:19:25,970 --> 00:19:30,319
estamos dedicando algo más de tiempo de

442
00:19:28,220 --> 00:19:32,809
lo usual para que quede bien fijado el

443
00:19:30,319 --> 00:19:35,389
concepto ya que te encontrarás usando

444
00:19:32,809 --> 00:19:38,000
este tipo de rutinas anti rebotes en

445
00:19:35,390 --> 00:19:40,430
variedad de ocasiones para finalizar el

446
00:19:38,000 --> 00:19:42,950
tema anti rebote debemos atender un

447
00:19:40,430 --> 00:19:45,769
último detalle toda la rutina está

448
00:19:42,950 --> 00:19:48,080
dentro de una función y ese r no está

449
00:19:45,769 --> 00:19:50,029
dentro del loop como ya sabes toda

450
00:19:48,079 --> 00:19:52,220
variable que se define dentro de una

451
00:19:50,029 --> 00:19:53,420
función se crea el momento en que

452
00:19:52,220 --> 00:19:56,210
llamada la función

453
00:19:53,420 --> 00:19:58,759
y se destruye al salir de la misma

454
00:19:56,210 --> 00:20:01,670
nosotros necesitamos que la variable

455
00:19:58,759 --> 00:20:04,460
última interrupción mantenga su valor

456
00:20:01,670 --> 00:20:06,769
sino no nos sirve para determinar la

457
00:20:04,460 --> 00:20:09,350
diferencia de tiempo para solucionar

458
00:20:06,769 --> 00:20:12,200
este tema en la declaración de variable

459
00:20:09,349 --> 00:20:16,009
última interrupción le colocamos el

460
00:20:12,200 --> 00:20:18,920
modificador static lo que hace static es

461
00:20:16,009 --> 00:20:21,440
decirle al compilador que no destruya la

462
00:20:18,920 --> 00:20:24,140
variable al irse de la función que

463
00:20:21,440 --> 00:20:27,289
mantenga su valor entre llamados a la

464
00:20:24,140 --> 00:20:29,570
misma la variable tiempo interrupción no

465
00:20:27,289 --> 00:20:31,789
requiere ser static ya que no nos

466
00:20:29,569 --> 00:20:34,220
importa que pierda su valor entre

467
00:20:31,789 --> 00:20:36,950
llamados ya que cada vez que llegamos a

468
00:20:34,220 --> 00:20:39,920
la función le cargamos el valor de miles

469
00:20:36,950 --> 00:20:42,289
que siempre cambia ahora sí si subimos

470
00:20:39,920 --> 00:20:44,750
el programa veríamos que funciona

471
00:20:42,289 --> 00:20:47,629
correctamente al deshacernos de los

472
00:20:44,750 --> 00:20:49,400
rebotes veríamos cómo se incrementa o

473
00:20:47,630 --> 00:20:52,070
decremento el valor de la variable

474
00:20:49,400 --> 00:20:54,710
posición con el giro del encuadre pero

475
00:20:52,069 --> 00:20:57,500
para dejarlo totalmente funcional este

476
00:20:54,710 --> 00:20:59,870
programa y lo puedas reutilizar para

477
00:20:57,500 --> 00:21:00,289
varios proyectos debemos encargarnos de

478
00:20:59,869 --> 00:21:02,869
una

479
00:21:00,289 --> 00:21:05,710
última cuestión elenco there no tiene

480
00:21:02,869 --> 00:21:09,199
topes con lo cual el valor de posición

481
00:21:05,710 --> 00:21:11,779
incrementa y decremento sin un límite el

482
00:21:09,200 --> 00:21:14,509
límite será solamente la longitud de la

483
00:21:11,779 --> 00:21:16,450
variable y esto no es muy práctico para

484
00:21:14,509 --> 00:21:18,890
la mayoría de los casos por ejemplo

485
00:21:16,450 --> 00:21:20,960
nosotros podríamos necesitar que

486
00:21:18,890 --> 00:21:23,600
solamente varíe el valor entre

487
00:21:20,960 --> 00:21:26,900
determinados límites para eso usaremos

488
00:21:23,599 --> 00:21:30,079
una combinación de las funciones min y

489
00:21:26,900 --> 00:21:32,780
max como se ve en esta línea la vamos a

490
00:21:30,079 --> 00:21:36,109
descontar para activarla veamos primero

491
00:21:32,779 --> 00:21:39,170
para qué sirven las funciones min y max

492
00:21:36,109 --> 00:21:41,139
min calcula el valor mínimo de dos

493
00:21:39,170 --> 00:21:44,539
números es decir que entre paréntesis

494
00:21:41,140 --> 00:21:47,180
debemos colocar dos valores numéricos y

495
00:21:44,539 --> 00:21:48,859
nos devolverá el mínimo de ambos los

496
00:21:47,180 --> 00:21:51,500
números se pueden colocar en cualquier

497
00:21:48,859 --> 00:21:54,679
orden aquí el ejemplo es con dos

498
00:21:51,500 --> 00:21:57,619
variables llamadas x es un ejemplo

499
00:21:54,680 --> 00:22:01,549
rápido sería si equivale 10

500
00:21:57,619 --> 00:22:05,599
y vale 20 la función devuelve 10 si x

501
00:22:01,549 --> 00:22:08,418
vale 50 y 30 devolverá 30

502
00:22:05,599 --> 00:22:10,279
simple siempre el valor menor esta

503
00:22:08,419 --> 00:22:13,070
función no servirá para definir el

504
00:22:10,279 --> 00:22:15,829
límite superior de la variable posición

505
00:22:13,069 --> 00:22:18,019
parece contrario a hablar de una función

506
00:22:15,829 --> 00:22:20,269
que devuelve el valor mínimo de dos

507
00:22:18,019 --> 00:22:22,668
valores y que sirve para establecer el

508
00:22:20,269 --> 00:22:25,190
límite superior pero verás que es así

509
00:22:22,669 --> 00:22:27,740
con un simple ejemplo si queremos que la

510
00:22:25,190 --> 00:22:30,740
variable posición tenga un límite de 100

511
00:22:27,740 --> 00:22:33,798
es decir que incrementemos su valor

512
00:22:30,740 --> 00:22:35,240
girando en sentido horario comenzamos

513
00:22:33,798 --> 00:22:37,460
desde 50

514
00:22:35,240 --> 00:22:40,220
vamos girando hasta que llegue a 100 y

515
00:22:37,460 --> 00:22:43,009
no siga incrementando pese a que uno

516
00:22:40,220 --> 00:22:45,470
siga girando entonces con la función min

517
00:22:43,009 --> 00:22:48,408
pondremos como uno de los parámetros a

518
00:22:45,470 --> 00:22:52,100
100 y como segundo a la variable

519
00:22:48,409 --> 00:22:55,850
posición si posición vale por ejemplo 60

520
00:22:52,099 --> 00:22:59,119
el valor mínimo entre 60 y 100 es 60

521
00:22:55,849 --> 00:23:02,658
pero qué pasa si ahora posición vale 101

522
00:22:59,119 --> 00:23:05,389
el valor mínimo entre 100 y 101 es 100

523
00:23:02,659 --> 00:23:08,179
queda claro que entonces establecimos el

524
00:23:05,390 --> 00:23:11,480
límite superior nunca podrá la variable

525
00:23:08,179 --> 00:23:13,850
posición asumir un valor mayor

526
00:23:11,480 --> 00:23:16,579
de la misma manera que existe en mil

527
00:23:13,849 --> 00:23:19,369
existen máx devuelve el valor máximo

528
00:23:16,579 --> 00:23:22,099
entre dos números y nos servirá para

529
00:23:19,369 --> 00:23:24,439
establecer el límite inferior de la

530
00:23:22,099 --> 00:23:27,500
variable posición si queremos que el

531
00:23:24,440 --> 00:23:30,289
valor mínimo sea cero entonces uno de

532
00:23:27,500 --> 00:23:32,690
los parámetros será cero y el otro la

533
00:23:30,289 --> 00:23:35,480
variable posición siempre y cuando

534
00:23:32,690 --> 00:23:38,090
posición sea mayor a cero devolverá el

535
00:23:35,480 --> 00:23:41,150
valor que tenga asignado si fuese menor

536
00:23:38,089 --> 00:23:43,849
a cero devuelve cero en esta línea de

537
00:23:41,150 --> 00:23:46,580
código se utiliza una combinación de

538
00:23:43,849 --> 00:23:48,799
ambas funciones min y max para

539
00:23:46,579 --> 00:23:52,429
establecer los límites que puede asumir

540
00:23:48,799 --> 00:23:55,519
la variable posición a valores entre 0 y

541
00:23:52,430 --> 00:23:58,220
100 y ahora si tenemos la totalidad del

542
00:23:55,519 --> 00:24:00,379
programa recordad que este código como

543
00:23:58,220 --> 00:24:02,329
el de todos los capítulos se encuentra

544
00:24:00,380 --> 00:24:04,940
disponible para descargar desde el

545
00:24:02,329 --> 00:24:08,119
enlace en la zona de descripción vamos a

546
00:24:04,940 --> 00:24:11,059
verificar y subir el programa luego a

547
00:24:08,119 --> 00:24:14,059
abrir el monitor serial en la ventana

548
00:24:11,059 --> 00:24:16,279
del monitor serial verás que dice listo

549
00:24:14,059 --> 00:24:18,049
y no escribe nada más y eso es porque

550
00:24:16,279 --> 00:24:20,720
aún no giramos el eje del

551
00:24:18,049 --> 00:24:23,149
antes de hacerlo recuerda que le

552
00:24:20,720 --> 00:24:26,150
cargamos un valor de posición inicial de

553
00:24:23,150 --> 00:24:29,600
50 de manera que si ahora giramos en

554
00:24:26,150 --> 00:24:32,509
sentido horario una posición veremos que

555
00:24:29,599 --> 00:24:34,869
aparece el número 51 lo cual es correcto

556
00:24:32,509 --> 00:24:38,569
al girar en sentido horario

557
00:24:34,869 --> 00:24:40,969
incrementamos en 1 el valor de posición

558
00:24:38,569 --> 00:24:44,750
si ahora giramos nuevamente una posición

559
00:24:40,970 --> 00:24:47,900
en sentido horario escribe el valor 52

560
00:24:44,750 --> 00:24:50,420
como verás cuenta perfectamente bien ya

561
00:24:47,900 --> 00:24:52,580
que nos encargamos de desestimar rebotes

562
00:24:50,420 --> 00:24:54,650
del propio mecanismo del encuadre

563
00:24:52,579 --> 00:24:57,169
podemos seguir girando en sentido

564
00:24:54,650 --> 00:25:00,230
horario con la velocidad que queramos y

565
00:24:57,170 --> 00:25:02,840
vemos cómo va incrementando en uno el

566
00:25:00,230 --> 00:25:06,170
valor de la cuenta podemos hacerlo hasta

567
00:25:02,839 --> 00:25:09,679
por ejemplo un valor de 60 ahora giremos

568
00:25:06,170 --> 00:25:11,420
una posición en sentido antihorario lo

569
00:25:09,680 --> 00:25:13,700
que debe hacer el programa es de

570
00:25:11,420 --> 00:25:15,800
incrementar el valor de la posición en

571
00:25:13,700 --> 00:25:20,059
una así que podemos ver que ahora

572
00:25:15,799 --> 00:25:23,240
escribe 59 si giramos nuevamente pasará

573
00:25:20,059 --> 00:25:24,678
a 58 y así verificamos que está

574
00:25:23,240 --> 00:25:27,409
detectando correctamente

575
00:25:24,679 --> 00:25:29,690
el sentido de giro sigamos girando en

576
00:25:27,409 --> 00:25:32,450
sentido antihorario para probar que no

577
00:25:29,690 --> 00:25:35,600
pase de 0 con la función max

578
00:25:32,450 --> 00:25:37,999
establecimos el límite inferior en 0 muy

579
00:25:35,599 --> 00:25:40,579
bien llegamos a 0 y ahora seguimos

580
00:25:37,999 --> 00:25:43,730
girando en sentido antihorario verás que

581
00:25:40,579 --> 00:25:46,460
el valor queda en 0 y no se mueve parece

582
00:25:43,730 --> 00:25:49,159
funcionar bien vamos al extremo superior

583
00:25:46,460 --> 00:25:51,079
que es de 100 giremos en sentido horario

584
00:25:49,159 --> 00:25:54,289
de manera que incremente el valor

585
00:25:51,079 --> 00:25:57,349
deberemos dar más de 3 vueltas completas

586
00:25:54,288 --> 00:26:00,048
para llegar a 100 cada vuelta son 30

587
00:25:57,349 --> 00:26:01,878
pasos llegamos entonces a 100

588
00:26:00,048 --> 00:26:04,278
si seguimos girando en sentido horario

589
00:26:01,878 --> 00:26:06,859
vemos que no se modifica el valor de

590
00:26:04,278 --> 00:26:09,950
posición y queda en 100 dice que

591
00:26:06,859 --> 00:26:12,199
seguimos girando verificamos entonces el

592
00:26:09,950 --> 00:26:13,069
límite superior para finalizar el

593
00:26:12,200 --> 00:26:15,499
capítulo

594
00:26:13,069 --> 00:26:17,990
veamos cómo podríamos modificar ciertos

595
00:26:15,499 --> 00:26:20,028
valores para distintos proyectos si

596
00:26:17,990 --> 00:26:22,609
nuestra intención fuese controlar el

597
00:26:20,028 --> 00:26:26,148
giro de un servomotor sabemos que la

598
00:26:22,609 --> 00:26:30,048
función write del objeto servo requiere

599
00:26:26,148 --> 00:26:31,429
que se le asigne un valor entre 0 y 180

600
00:26:30,048 --> 00:26:33,710
entonces de manera

601
00:26:31,430 --> 00:26:36,049
y sencilla vamos a esta línea donde

602
00:26:33,710 --> 00:26:40,340
tenemos definidos los límites de la

603
00:26:36,049 --> 00:26:43,309
variable posición y reemplazamos 100% 80

604
00:26:40,339 --> 00:26:46,399
0 no es necesario ya que está cargado de

605
00:26:43,309 --> 00:26:48,980
antes y de esa forma ya podemos asignar

606
00:26:46,400 --> 00:26:51,710
el valor de la posición a la función

607
00:26:48,980 --> 00:26:54,079
right y hacer gira del servo también

608
00:26:51,710 --> 00:26:56,809
otro valor que sería interesante cambiar

609
00:26:54,079 --> 00:26:59,210
es el valor inicial de posición al

610
00:26:56,809 --> 00:27:02,299
principio del programa tenemos un valor

611
00:26:59,210 --> 00:27:06,500
de 50 para un servo probablemente sería

612
00:27:02,299 --> 00:27:08,839
más útil cambiarlo por 90 así cuando se

613
00:27:06,500 --> 00:27:11,960
inicia el programa el servo se ubica a

614
00:27:08,839 --> 00:27:15,199
90 grados y luego con el incoder vamos

615
00:27:11,960 --> 00:27:18,140
girando en un sentido u otro otro caso

616
00:27:15,200 --> 00:27:21,710
sería utilizar la variable posición para

617
00:27:18,140 --> 00:27:25,790
una salida p w m wv m requiere valores

618
00:27:21,710 --> 00:27:28,460
entre 0 y 255 así que también muy

619
00:27:25,789 --> 00:27:32,809
fácilmente vamos a esta línea y

620
00:27:28,460 --> 00:27:35,269
cambiamos 180 por 255 y así nos

621
00:27:32,809 --> 00:27:37,259
aseguramos que la variable siempre se

622
00:27:35,269 --> 00:27:41,940
mantenga en el rango de

623
00:27:37,259 --> 00:27:43,980
0 y 255 también tranquilamente se podría

624
00:27:41,940 --> 00:27:46,230
modificar el valor de la posición

625
00:27:43,980 --> 00:27:48,809
inicial si lo vamos a utilizar para

626
00:27:46,230 --> 00:27:52,319
regular la intensidad de un led quizás

627
00:27:48,809 --> 00:27:55,409
un valor inicial de 127 nos vendría bien

628
00:27:52,319 --> 00:27:57,960
para arrancar con brillo medio y así

629
00:27:55,410 --> 00:28:00,360
para todo lo que necesitemos la idea de

630
00:27:57,960 --> 00:28:02,819
este código es que lo puedas reutilizar

631
00:28:00,359 --> 00:28:05,279
para cualquiera de tus proyectos y eso

632
00:28:02,819 --> 00:28:07,230
es todo por este capítulo como siempre

633
00:28:05,279 --> 00:28:09,480
es te pido te suscribas para recibir

634
00:28:07,230 --> 00:28:12,089
notificaciones y por cualquier duda o

635
00:28:09,480 --> 00:28:14,789
comentario lo puedes hacer debajo que

636
00:28:12,089 --> 00:28:17,029
con gusto te responderé chao y hasta la

637
00:28:14,789 --> 00:28:17,029
próxima

