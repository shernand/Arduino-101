1
00:00:00,390 --> 00:00:07,318
hola a todos y bienvenidos al capítulo 9

2
00:00:03,810 --> 00:00:09,540
de arduino desde cero en español en esta

3
00:00:07,318 --> 00:00:13,109
oportunidad vamos a utilizar un teclado

4
00:00:09,539 --> 00:00:15,899
de membrana matricial de 4 x 4 para

5
00:00:13,109 --> 00:00:18,570
ingresar información arduino y hacer un

6
00:00:15,900 --> 00:00:21,480
simple control de acceso con contraseña

7
00:00:18,570 --> 00:00:24,419
el teclado se muestra sobre la parte

8
00:00:21,480 --> 00:00:28,259
izquierda de pantalla tiene cuatro filas

9
00:00:24,419 --> 00:00:32,399
y cuatro columnas con los números 0 al 9

10
00:00:28,259 --> 00:00:36,299
el asterisco el numeral y las letras a b

11
00:00:32,399 --> 00:00:38,219
c y d es del tipo de membrana ya que los

12
00:00:36,299 --> 00:00:41,159
botones se encuentran entre dos

13
00:00:38,219 --> 00:00:43,649
membranas ligeramente separadas al

14
00:00:41,159 --> 00:00:46,049
presionar sobre un botón se cierra el

15
00:00:43,649 --> 00:00:49,049
circuito eléctrico funcionando como un

16
00:00:46,049 --> 00:00:52,948
pulsador es plano en su parte posterior

17
00:00:49,049 --> 00:00:54,538
y muy delgado y liviano con lo cual se

18
00:00:52,948 --> 00:00:57,599
puede adherir a cualquier superficie

19
00:00:54,539 --> 00:01:01,230
plana ya sea de forma horizontal o

20
00:00:57,600 --> 00:01:05,820
vertical de la zona de teclas saldrá un

21
00:01:01,229 --> 00:01:08,728
cable plano flexible de 8 conductores

22
00:01:05,819 --> 00:01:11,969
y nada sobre un conector estándar para

23
00:01:08,728 --> 00:01:14,519
una fácil conexión arduino de hecho no

24
00:01:11,969 --> 00:01:17,280
necesitaremos utilizar protoboard para

25
00:01:14,519 --> 00:01:19,949
este proyecto conectaremos directamente

26
00:01:17,280 --> 00:01:22,469
mediante cables el teclado con los pines

27
00:01:19,950 --> 00:01:24,868
digitales de arduino comenzando de

28
00:01:22,469 --> 00:01:27,420
izquierda a derecha los terminales de

29
00:01:24,868 --> 00:01:30,750
este conector estarán identificados con

30
00:01:27,420 --> 00:01:34,590
la letra f para las filas y se para las

31
00:01:30,750 --> 00:01:39,239
columnas de esa manera tendremos f 1 que

32
00:01:34,590 --> 00:01:42,990
será fila 1 efe 2 fila 2 y así hasta la

33
00:01:39,239 --> 00:01:47,039
fila 4 luego comenzarán las columnas que

34
00:01:42,989 --> 00:01:49,469
serán c 1 para la columna 1 hasta hace 4

35
00:01:47,039 --> 00:01:52,289
para la columna 4 a la derecha del

36
00:01:49,469 --> 00:01:54,509
teclado vemos un diagrama que permite

37
00:01:52,289 --> 00:01:57,539
explicar el conexionado interno del

38
00:01:54,509 --> 00:02:00,118
mismo con color azul se encuentran

39
00:01:57,539 --> 00:02:03,629
identificadas las líneas que serán las

40
00:02:00,118 --> 00:02:06,329
horizontales y con verde las columnas

41
00:02:03,629 --> 00:02:09,000
que serán las líneas verticales

42
00:02:06,329 --> 00:02:12,090
de estas líneas no se entrecruzan en

43
00:02:09,000 --> 00:02:14,849
ninguna parte en la intersección de cada

44
00:02:12,090 --> 00:02:17,400
fila y columna tendremos el botón del

45
00:02:14,849 --> 00:02:20,699
teclado que se representa de color negro

46
00:02:17,400 --> 00:02:21,870
como si fuera un pulsador ya que realiza

47
00:02:20,699 --> 00:02:25,109
la misma acción

48
00:02:21,870 --> 00:02:27,780
estando en reposo es un circuito abierto

49
00:02:25,110 --> 00:02:30,510
y al presionar se cierra el circuito

50
00:02:27,780 --> 00:02:33,300
entre sus extremos lo que estaremos

51
00:02:30,509 --> 00:02:36,419
logrando es que cuando se presiona una

52
00:02:33,300 --> 00:02:38,850
tecla se cierra el pulsador asociado a

53
00:02:36,419 --> 00:02:41,929
la misma y esto a su vez conecta

54
00:02:38,849 --> 00:02:44,879
eléctricamente una fila y una columna

55
00:02:41,930 --> 00:02:48,209
por ejemplo si presionamos el botón

56
00:02:44,879 --> 00:02:51,419
número 1 veremos que el pulsador al

57
00:02:48,209 --> 00:02:54,629
cerrar se conecta a la fila 1 con la

58
00:02:51,419 --> 00:02:57,449
columna 1 si por ejemplo ahora

59
00:02:54,629 --> 00:03:01,359
presionamos el botón número 4 se

60
00:02:57,449 --> 00:03:04,750
conectará a la fila 2 y la columna 1

61
00:03:01,360 --> 00:03:06,280
en resumen al presionar un botón se

62
00:03:04,750 --> 00:03:09,189
estará cerrando el circuito

63
00:03:06,280 --> 00:03:13,330
correspondiente a una determinada fila y

64
00:03:09,189 --> 00:03:16,539
columna este teclado es de 4 x 4 con

65
00:03:13,330 --> 00:03:20,080
cuatro filas y cuatro columnas tenemos

66
00:03:16,539 --> 00:03:23,590
en total 16 botones este tipo de

67
00:03:20,080 --> 00:03:26,530
distribución se la denomina matricial y

68
00:03:23,590 --> 00:03:29,560
es muy usada ya que permite conectar un

69
00:03:26,530 --> 00:03:31,930
gran número de botones o teclas con un

70
00:03:29,560 --> 00:03:35,289
número reducido de conexiones de control

71
00:03:31,930 --> 00:03:38,170
en este caso estaremos manejando 16

72
00:03:35,289 --> 00:03:40,929
botones con sólo 8 líneas de control

73
00:03:38,169 --> 00:03:43,329
cabe aclarar que este teclado también

74
00:03:40,930 --> 00:03:47,430
existe en su variante de cuatro por tres

75
00:03:43,330 --> 00:03:50,080
es decir de cuatro filas y tres columnas

76
00:03:47,430 --> 00:03:52,599
exactamente igual que el mostrado pero

77
00:03:50,080 --> 00:03:55,030
si en la columna de las letras vamos

78
00:03:52,599 --> 00:03:57,750
entonces al diagrama para conectarlo

79
00:03:55,030 --> 00:04:01,449
arduino es realmente muy sencillo

80
00:03:57,750 --> 00:04:04,090
requerirá de ocho cables el terminal de

81
00:04:01,449 --> 00:04:07,299
la izquierda lo conectaremos al pin

82
00:04:04,090 --> 00:04:10,240
digital número 9 de arduino

83
00:04:07,300 --> 00:04:13,540
el pin siguiente a su derecha al pin

84
00:04:10,240 --> 00:04:16,000
digital 8 del arduino y así con todos

85
00:04:13,539 --> 00:04:19,360
los cables hasta llegar al último del

86
00:04:16,000 --> 00:04:25,110
teclado que irá al pin número 2 de

87
00:04:19,360 --> 00:04:32,350
arduino de esa manera tendremos fila 19

88
00:04:25,110 --> 00:04:38,080
fila 2 a ping 8 fila 3 a pin 7 fila 4 a

89
00:04:32,350 --> 00:04:43,480
pin 6 columna 1 a pin cinco columna 2 a

90
00:04:38,079 --> 00:04:45,159
pin cuatro columna 3 a pin 3 y columna 4

91
00:04:43,480 --> 00:04:47,140
a kim 2

92
00:04:45,160 --> 00:04:51,130
eso es todo lo necesario para el

93
00:04:47,139 --> 00:04:54,009
conexionado vamos a ver el código vimos

94
00:04:51,129 --> 00:04:56,350
en el capítulo 3 que al conectar un

95
00:04:54,009 --> 00:04:58,719
pulsador a una entrada digital de

96
00:04:56,350 --> 00:05:01,990
arduino debíamos tener en cuenta la

97
00:04:58,720 --> 00:05:04,210
cuestión del rebote es decir el estado

98
00:05:01,990 --> 00:05:06,310
intermedio que existe hasta que el

99
00:05:04,209 --> 00:05:09,159
pulsador mecánicamente cierra el

100
00:05:06,310 --> 00:05:11,410
circuito si no se hacía una rutina

101
00:05:09,160 --> 00:05:13,660
llamada anti rebote

102
00:05:11,410 --> 00:05:16,300
podríamos obtener lecturas

103
00:05:13,660 --> 00:05:19,000
para evitar complejidades en el uso del

104
00:05:16,300 --> 00:05:21,790
teclado utilizaremos una librería

105
00:05:19,000 --> 00:05:23,920
especial llamada equipada ya hemos

106
00:05:21,790 --> 00:05:26,680
utilizado en librerías con anterioridad

107
00:05:23,920 --> 00:05:28,259
para el servo para el sensor de

108
00:05:26,680 --> 00:05:30,879
temperatura y humedad

109
00:05:28,259 --> 00:05:33,579
simplificando de esa manera la

110
00:05:30,879 --> 00:05:36,399
programación para utilizar la librería

111
00:05:33,579 --> 00:05:38,859
equipada que nos ayudará para este caso

112
00:05:36,399 --> 00:05:41,739
debemos primero descargarla desde el

113
00:05:38,860 --> 00:05:45,040
gestor de librerías por eso vamos a

114
00:05:41,740 --> 00:05:48,689
seleccionar en el menú programa luego

115
00:05:45,040 --> 00:05:52,720
incluir librería y de allí la opción

116
00:05:48,689 --> 00:05:55,120
gestionar librerías esto abrirá una

117
00:05:52,720 --> 00:05:58,240
nueva ventana mostrando todas las

118
00:05:55,120 --> 00:06:01,389
librerías disponibles nosotros queremos

119
00:05:58,240 --> 00:06:03,699
una específica para el teclado por eso

120
00:06:01,389 --> 00:06:06,699
en el campo de búsqueda colocaremos la

121
00:06:03,699 --> 00:06:09,459
palabra equipado y así estaremos

122
00:06:06,699 --> 00:06:12,459
filtrando los resultados a sólo lo que

123
00:06:09,459 --> 00:06:15,579
nos interesa puede que devuelvan más de

124
00:06:12,459 --> 00:06:17,379
un resultado se debe seleccionar la que

125
00:06:15,579 --> 00:06:20,529
dice equipo

126
00:06:17,379 --> 00:06:23,800
y el nombre de los desarrolladores y

127
00:06:20,529 --> 00:06:26,229
luego clic en el botón instalar yo ya

128
00:06:23,800 --> 00:06:28,840
tengo instalada la librería por eso no

129
00:06:26,230 --> 00:06:31,990
me aparece el botón habilitado de

130
00:06:28,839 --> 00:06:34,269
instalar pero en tu caso lo estará al

131
00:06:31,990 --> 00:06:36,730
hacer clic verás una barra de progreso

132
00:06:34,269 --> 00:06:40,089
donde se descarga de internet la

133
00:06:36,730 --> 00:06:43,420
librería y la instala sólo demora unos

134
00:06:40,089 --> 00:06:46,239
pocos segundos luego verás la indicación

135
00:06:43,420 --> 00:06:50,590
de install cuando haya finalizado el

136
00:06:46,240 --> 00:06:53,620
proceso finalmente cerrar para salir del

137
00:06:50,589 --> 00:06:56,319
gestor de librerías y ahora podremos

138
00:06:53,620 --> 00:06:58,810
utilizar todas las funciones asociadas a

139
00:06:56,319 --> 00:07:01,569
la librería que nos facilitarán en gran

140
00:06:58,810 --> 00:07:04,930
medida la programación esta librería

141
00:07:01,569 --> 00:07:06,879
está diseñada para un uso genérico para

142
00:07:04,930 --> 00:07:10,030
distintos tipos de teclados y

143
00:07:06,879 --> 00:07:12,159
distribuciones por eso requerirá algunas

144
00:07:10,029 --> 00:07:14,500
líneas de código para indicar

145
00:07:12,160 --> 00:07:16,990
exactamente el tipo de teclado que

146
00:07:14,500 --> 00:07:19,930
tenemos en nuestro proyecto

147
00:07:16,990 --> 00:07:23,110
estaré pegando directamente las líneas

148
00:07:19,930 --> 00:07:25,810
que son obligatorias antes de comenzar a

149
00:07:23,110 --> 00:07:28,180
utilizar las funciones de la librería es

150
00:07:25,810 --> 00:07:30,220
para ahorrar tiempo me dedicaré a

151
00:07:28,180 --> 00:07:33,040
explicar cada una de las líneas de

152
00:07:30,220 --> 00:07:36,010
código recordad que el código de este

153
00:07:33,040 --> 00:07:38,890
programa se encuentra en el enlace que

154
00:07:36,009 --> 00:07:41,980
dejo en la sección de descripción ahí

155
00:07:38,889 --> 00:07:45,759
encontrarás el código usado en este y en

156
00:07:41,980 --> 00:07:49,550
todos los capítulos del curso bien ahí

157
00:07:45,759 --> 00:07:52,939
pego las líneas y paso a la explicación

158
00:07:49,550 --> 00:07:55,430
este pequeño trabajo previo nos ahorrará

159
00:07:52,939 --> 00:07:57,829
tiempo luego y estas líneas de código

160
00:07:55,430 --> 00:08:00,230
son siempre las mismas

161
00:07:57,829 --> 00:08:03,139
cada vez que usemos el teclado solo

162
00:08:00,230 --> 00:08:06,250
copiamos y pegamos estas líneas y listo

163
00:08:03,139 --> 00:08:09,709
la primera línea es la ya conocida

164
00:08:06,250 --> 00:08:15,170
numeral include que importa la librería

165
00:08:09,709 --> 00:08:17,609
equipada luego tenemos con byte filas

166
00:08:15,170 --> 00:08:19,669
igual 4

167
00:08:17,610 --> 00:08:23,250
de la misma manera que veníamos usando

168
00:08:19,668 --> 00:08:27,240
variables aquí definiremos una llamada

169
00:08:23,250 --> 00:08:29,668
filas y le asignamos un valor de 4 ya

170
00:08:27,240 --> 00:08:32,879
que efectivamente nuestro teclado tiene

171
00:08:29,668 --> 00:08:34,559
cuatro filas la diferencia es que vemos

172
00:08:32,879 --> 00:08:38,429
que en lugar de usar int

173
00:08:34,559 --> 00:08:41,728
usamos byte int que lo veníamos usando

174
00:08:38,429 --> 00:08:44,819
ya hace tiempo es una variable del tipo

175
00:08:41,729 --> 00:08:47,700
entera y algo que no dijimos para no

176
00:08:44,820 --> 00:08:52,200
complicar al principio es que tiene una

177
00:08:47,700 --> 00:08:54,329
longitud de 16 bits consignó es decir

178
00:08:52,200 --> 00:09:01,230
que permite almacenar entre un número

179
00:08:54,328 --> 00:09:07,199
negativo de 32 mil 768 y uno positivo de

180
00:09:01,230 --> 00:09:10,889
32 mil 767 en este caso una variable del

181
00:09:07,200 --> 00:09:14,550
tipo byte tiene una longitud de 8 bits

182
00:09:10,889 --> 00:09:19,350
la mitad que int con lo cual permite

183
00:09:14,549 --> 00:09:22,709
almacenar valores entre 0 y 255

184
00:09:19,350 --> 00:09:23,159
esa es la única diferencia entre byte e

185
00:09:22,710 --> 00:09:26,870
int

186
00:09:23,159 --> 00:09:29,879
el rango de valores que puede almacenar

187
00:09:26,870 --> 00:09:32,759
aquí en la librería equipada debemos

188
00:09:29,879 --> 00:09:36,389
utilizarla para definir la cantidad de

189
00:09:32,759 --> 00:09:39,230
filas de nuestro teclado luego vimos que

190
00:09:36,389 --> 00:09:43,159
le precede la palabra const que es

191
00:09:39,230 --> 00:09:46,139
constante en inglés es decir constante

192
00:09:43,159 --> 00:09:48,269
al preceder la definición de una

193
00:09:46,139 --> 00:09:50,580
variable con la palabra const

194
00:09:48,269 --> 00:09:53,189
y estamos diciendo que el valor que le

195
00:09:50,580 --> 00:09:56,100
cargamos a la variable no puede ser

196
00:09:53,190 --> 00:09:58,290
modificado con posterioridad es decir

197
00:09:56,100 --> 00:10:01,290
que una vez que en este caso le

198
00:09:58,289 --> 00:10:04,049
asignamos a filas el valor de 4

199
00:10:01,289 --> 00:10:06,750
no podemos cambiar su valor más adelante

200
00:10:04,049 --> 00:10:08,879
en el programa si por ejemplo una

201
00:10:06,750 --> 00:10:10,980
variable que está definida como

202
00:10:08,879 --> 00:10:14,429
constante en el programa le queremos

203
00:10:10,980 --> 00:10:17,430
asignar un nuevo valor el compilador nos

204
00:10:14,429 --> 00:10:20,009
devolverá un error hay que pensarlo como

205
00:10:17,429 --> 00:10:23,219
una medida de seguridad para no cambiar

206
00:10:20,009 --> 00:10:25,500
un valor por error en definitiva hemos

207
00:10:23,220 --> 00:10:29,730
creado una variable llamada

208
00:10:25,500 --> 00:10:32,909
con un valor de 4 que del tipo byte y al

209
00:10:29,730 --> 00:10:36,210
ser constante no se podrá modificar más

210
00:10:32,909 --> 00:10:40,379
adelante en el programa ahora la

211
00:10:36,210 --> 00:10:44,100
siguiente línea con este byte columnas

212
00:10:40,379 --> 00:10:46,289
igual a 4 misma cuestión que la anterior

213
00:10:44,100 --> 00:10:50,340
línea pero esta vez definiremos la

214
00:10:46,289 --> 00:10:52,889
variable columnas con un valor de 4 si

215
00:10:50,340 --> 00:10:55,740
recuerdan al principio les comentaba que

216
00:10:52,889 --> 00:10:58,080
existen teclados de cuatro por tres si

217
00:10:55,740 --> 00:11:00,539
estuviésemos usando un teclado de ese

218
00:10:58,080 --> 00:11:03,450
tipo aquí le estaríamos asignando a

219
00:11:00,539 --> 00:11:06,509
columnas un valor de tres en vez de

220
00:11:03,450 --> 00:11:10,290
cuatro veamos ahora este bloque de

221
00:11:06,509 --> 00:11:13,649
código lo que hace es definir un mapa de

222
00:11:10,289 --> 00:11:16,019
la distribución del teclado es decir qué

223
00:11:13,649 --> 00:11:19,559
valor representa cada botón en el

224
00:11:16,019 --> 00:11:22,470
teclado este bloque en realidad se puede

225
00:11:19,559 --> 00:11:25,679
poner en una sola línea pero se dejan

226
00:11:22,470 --> 00:11:28,810
saltos de línea a propósito para que sea

227
00:11:25,679 --> 00:11:31,689
más entendible de un solo vistazo

228
00:11:28,809 --> 00:11:34,299
como la librería equipada es genérica y

229
00:11:31,690 --> 00:11:37,300
se puede utilizar variedad de teclados y

230
00:11:34,299 --> 00:11:40,750
distribuciones debemos usar este bloque

231
00:11:37,299 --> 00:11:43,839
para designar el correcto mapeo por

232
00:11:40,750 --> 00:11:46,860
ejemplo si tuviésemos un teclado de 4 x

233
00:11:43,840 --> 00:11:50,470
3 deberíamos eliminar todas las letras

234
00:11:46,860 --> 00:11:53,440
es importante aclarar que cada carácter

235
00:11:50,470 --> 00:11:54,879
se encuentra entre comillas simples y el

236
00:11:53,440 --> 00:11:57,250
carácter que en el teclado de la

237
00:11:54,879 --> 00:12:00,220
computadora suele estar debajo del

238
00:11:57,250 --> 00:12:02,919
símbolo de interrogación luego tenemos

239
00:12:00,220 --> 00:12:05,170
la siguiente línea donde definimos los

240
00:12:02,919 --> 00:12:08,009
pines de arduino a donde tenemos

241
00:12:05,169 --> 00:12:12,969
conectadas las filas de nuestro teclado

242
00:12:08,009 --> 00:12:17,899
byte pines filas entre corchetes filas

243
00:12:12,970 --> 00:12:21,200
igual 9 8 7 6

244
00:12:17,899 --> 00:12:24,500
el nombre de la variable es pines filas

245
00:12:21,200 --> 00:12:27,830
y es del tipo byte pero aquí debemos

246
00:12:24,500 --> 00:12:31,730
introducir un nuevo concepto que es y la

247
00:12:27,830 --> 00:12:34,100
rai también llamado arreglo un array

248
00:12:31,730 --> 00:12:36,409
está constituido por un conjunto de

249
00:12:34,100 --> 00:12:39,019
valores a los que se accede con un

250
00:12:36,409 --> 00:12:42,049
número de índice es muy usado en

251
00:12:39,019 --> 00:12:45,590
programación y vale la pena reservarlo

252
00:12:42,049 --> 00:12:48,679
unos momentos para su explicación en

253
00:12:45,590 --> 00:12:52,879
este ejemplo esta línea de código crea

254
00:12:48,679 --> 00:12:56,599
un array llamado mi array de tipo byte

255
00:12:52,879 --> 00:12:58,820
con un tamaño de 6 el tamaño es el que

256
00:12:56,600 --> 00:13:00,680
se establece con el número que tiene

257
00:12:58,820 --> 00:13:02,960
entre corchetes

258
00:13:00,679 --> 00:13:06,049
es decir que si vemos a la variable como

259
00:13:02,960 --> 00:13:08,930
si fuese un rectángulo el mismo estará

260
00:13:06,049 --> 00:13:11,719
dividido en seis espacios para acceder a

261
00:13:08,929 --> 00:13:14,899
cada uno de esos espacios ya sea para

262
00:13:11,720 --> 00:13:18,230
leer un valor o escribir uno tendremos

263
00:13:14,899 --> 00:13:20,389
un índice también llamado puntero que

264
00:13:18,230 --> 00:13:24,259
está representado con la flecha de color

265
00:13:20,389 --> 00:13:27,409
rojo este índice podrá moverse a través

266
00:13:24,259 --> 00:13:30,188
de toda la longitud de la red veamos un

267
00:13:27,409 --> 00:13:34,938
ejemplo concreto en esta línea de código

268
00:13:30,188 --> 00:13:39,139
cargamos 6 valores a la raíz mi raid con

269
00:13:34,938 --> 00:13:41,928
los números del 1 al 6 cada valor se

270
00:13:39,139 --> 00:13:44,989
encuentra separado por comas y todo

271
00:13:41,928 --> 00:13:47,269
entre llaves quedando el rectángulo azul

272
00:13:44,989 --> 00:13:50,869
que representa a la raíz

273
00:13:47,269 --> 00:13:53,269
lleno con valores en cada espacio si

274
00:13:50,869 --> 00:13:56,059
ahora queremos acceder a algún valor de

275
00:13:53,269 --> 00:13:59,989
ese array debemos indicarle el número de

276
00:13:56,058 --> 00:14:02,868
índice y aquí es importante recordar que

277
00:13:59,989 --> 00:14:06,410
el primer valor de la rai se accede con

278
00:14:02,869 --> 00:14:11,089
índice cero es decir que el primer valor

279
00:14:06,409 --> 00:14:14,568
no tiene índice uno tiene índice cero el

280
00:14:11,089 --> 00:14:17,720
segundo valor tendrá índice 1 y así

281
00:14:14,568 --> 00:14:20,748
hasta el índice 5 que es el final de

282
00:14:17,720 --> 00:14:23,119
este raid de seis posiciones por

283
00:14:20,749 --> 00:14:25,639
supuesto que se puede hacer de la

284
00:14:23,119 --> 00:14:28,249
longitud que se necesite

285
00:14:25,639 --> 00:14:29,340
si queremos leer el valor de la rai en

286
00:14:28,249 --> 00:14:32,580
el índice

287
00:14:29,340 --> 00:14:36,120
y lo haremos de esta forma con el nombre

288
00:14:32,580 --> 00:14:38,639
de la raid entre corchetes el índice y

289
00:14:36,120 --> 00:14:41,639
el resultado lo asignamos a una variable

290
00:14:38,639 --> 00:14:43,379
que en este caso será 1

291
00:14:41,639 --> 00:14:46,379
otro ejemplo para que quede claro el

292
00:14:43,379 --> 00:14:51,450
concepto es leer el valor de la rai en

293
00:14:46,379 --> 00:14:54,029
el índice 4 el valor será de 5 si por el

294
00:14:51,450 --> 00:14:57,780
contrario deseamos modificar un valor

295
00:14:54,029 --> 00:15:00,779
usaremos esta línea de código donde a la

296
00:14:57,779 --> 00:15:04,019
raid en el índice 5 es decir al final

297
00:15:00,779 --> 00:15:08,669
del mismo le asignamos un nuevo valor

298
00:15:04,019 --> 00:15:11,009
por ejemplo 7 para resumir un array

299
00:15:08,669 --> 00:15:13,110
nos permite almacenar múltiples valores

300
00:15:11,009 --> 00:15:16,379
a los cuales se accede mediante un

301
00:15:13,110 --> 00:15:20,340
índice y ese índice siempre comienza

302
00:15:16,379 --> 00:15:22,620
desde cero ahora sí volviendo al código

303
00:15:20,340 --> 00:15:25,800
ya que sabemos lo que es un array

304
00:15:22,620 --> 00:15:28,500
nos queda claro que esta línea carga en

305
00:15:25,799 --> 00:15:32,019
una raíz de cuatro posiciones los

306
00:15:28,500 --> 00:15:34,509
números 9 8 7 y 6

307
00:15:32,019 --> 00:15:37,509
en esta línea haremos la misma

308
00:15:34,509 --> 00:15:40,989
operatoria en la raya llamado fines

309
00:15:37,509 --> 00:15:46,839
columnas le cargaremos los pines que

310
00:15:40,989 --> 00:15:49,600
corresponden 5 4 3 y 2 finalmente en

311
00:15:46,839 --> 00:15:53,350
esta línea creamos un objeto llamado

312
00:15:49,600 --> 00:15:56,199
teclado del tipo equipada y le cargamos

313
00:15:53,350 --> 00:15:59,678
todos los valores ya definidos de manera

314
00:15:56,198 --> 00:16:02,708
de crear el mapa de la distribución los

315
00:15:59,678 --> 00:16:05,470
pines de las filas los pines de las

316
00:16:02,708 --> 00:16:08,438
columnas la cantidad de filas y la

317
00:16:05,470 --> 00:16:11,709
cantidad de columnas todo este bloque

318
00:16:08,438 --> 00:16:13,778
explicado es siempre el mismo y basta

319
00:16:11,708 --> 00:16:15,669
con copiar y pegar

320
00:16:13,778 --> 00:16:18,519
cada vez que necesitemos usar el teclado

321
00:16:15,669 --> 00:16:21,909
a partir de ahora sólo deberemos

322
00:16:18,519 --> 00:16:23,999
referirnos al objeto teclado para usar

323
00:16:21,909 --> 00:16:27,988
cualquiera de sus funciones asociadas

324
00:16:23,999 --> 00:16:30,548
hagamos entonces el setup colocaremos

325
00:16:27,989 --> 00:16:33,429
solamente la inicialización de la

326
00:16:30,548 --> 00:16:36,369
comunicación serie ya que usaremos el

327
00:16:33,428 --> 00:16:38,649
monitor serial para ver en pantalla lo

328
00:16:36,369 --> 00:16:41,800
que ingresemos mediante el teclado

329
00:16:38,649 --> 00:16:45,039
y también la indicación de si la clave

330
00:16:41,799 --> 00:16:51,549
ingresada es correcta o no con lo cual

331
00:16:45,039 --> 00:16:56,159
pondremos sería el punto de 9.600

332
00:16:51,549 --> 00:17:02,689
en el loop escribamos lo siguiente tecla

333
00:16:56,159 --> 00:17:05,990
igual teclado punto get key

334
00:17:02,690 --> 00:17:09,318
con esa sola línea ya tenemos el valor

335
00:17:05,990 --> 00:17:11,809
ingresado en el teclado aquí es donde se

336
00:17:09,318 --> 00:17:15,139
aprecia la conveniencia de utilizar la

337
00:17:11,809 --> 00:17:17,419
librería aquí para la variable tecla no

338
00:17:15,140 --> 00:17:20,750
la hemos definido así que volvamos

339
00:17:17,420 --> 00:17:23,220
brevemente a la última línea antes del

340
00:17:20,750 --> 00:17:28,409
sestao y agreguemos

341
00:17:23,220 --> 00:17:32,990
cada tecla card es otro tipo de variable

342
00:17:28,409 --> 00:17:36,929
y significa carácter en inglés es decir

343
00:17:32,990 --> 00:17:40,259
carácter se escribe charm pero se

344
00:17:36,929 --> 00:17:43,200
pronuncia cara esta variable debe ser

345
00:17:40,259 --> 00:17:46,319
del tipo card para que la función get

346
00:17:43,200 --> 00:17:49,019
que nos devuelva lo que ingresemos en el

347
00:17:46,319 --> 00:17:52,139
teclado como un carácter si fue su

348
00:17:49,019 --> 00:17:54,990
número entero o byte no podríamos usar

349
00:17:52,140 --> 00:17:57,900
las teclas con letras ni tampoco el

350
00:17:54,990 --> 00:17:58,769
asterisco y el numeral ahora con esta

351
00:17:57,900 --> 00:18:01,048
línea

352
00:17:58,769 --> 00:18:04,440
simplemente podríamos enviar el valor

353
00:18:01,048 --> 00:18:06,960
por el monitor serial seria el punto a

354
00:18:04,440 --> 00:18:09,450
print tecla

355
00:18:06,960 --> 00:18:12,840
si subimos el programa y abrimos el

356
00:18:09,450 --> 00:18:15,390
monitor serial veríamos como en pantalla

357
00:18:12,839 --> 00:18:18,569
se muestran las teclas que se presionan

358
00:18:15,390 --> 00:18:22,169
en el teclado pero la idea es hacer un

359
00:18:18,569 --> 00:18:24,658
simple control de acceso con contraseña

360
00:18:22,169 --> 00:18:27,149
entonces haremos un poco más de código

361
00:18:24,659 --> 00:18:29,250
para obtener una clave que ingresemos

362
00:18:27,148 --> 00:18:32,158
que sea de 6 caracteres

363
00:18:29,250 --> 00:18:34,679
luego compararemos esa clave con una

364
00:18:32,159 --> 00:18:37,080
clave maestra para verificar si

365
00:18:34,679 --> 00:18:39,390
coinciden si es así

366
00:18:37,079 --> 00:18:41,939
escribiremos en el monitor serial como

367
00:18:39,390 --> 00:18:45,330
correcta si no coinciden

368
00:18:41,940 --> 00:18:48,230
entonces mostraremos que es incorrecta

369
00:18:45,329 --> 00:18:52,079
esta lógica nos permitirá detectar

370
00:18:48,230 --> 00:18:55,048
cuando la contraseña sea correcta y por

371
00:18:52,079 --> 00:18:59,129
ejemplo activar luego un módulo de relé

372
00:18:55,048 --> 00:19:02,129
como he visto en el capítulo 8 y activar

373
00:18:59,130 --> 00:19:05,520
una cerradura eléctrica para permitir el

374
00:19:02,130 --> 00:19:08,760
acceso de una persona o si es incorrecta

375
00:19:05,519 --> 00:19:11,278
activar una alarma sonora lo que haremos

376
00:19:08,759 --> 00:19:12,529
ahora es solo escribir en el monitor

377
00:19:11,278 --> 00:19:15,079
serial

378
00:19:12,529 --> 00:19:17,629
sienta las bases para proyectos más

379
00:19:15,079 --> 00:19:20,750
complejos vamos a usar un par de

380
00:19:17,630 --> 00:19:23,180
variables por eso vamos nuevamente a la

381
00:19:20,750 --> 00:19:25,690
última línea antes del setup y

382
00:19:23,180 --> 00:19:25,690
escribamos

383
00:19:26,160 --> 00:19:34,210
clave entre corchetes 7

384
00:19:30,970 --> 00:19:40,058
cara clave

385
00:19:34,210 --> 00:19:46,558
maestra entre corchetes 7 igual entre

386
00:19:40,058 --> 00:19:54,148
comillas 1 2 3 4 5 6

387
00:19:46,558 --> 00:19:57,210
luego bite índice igual a cero la clave

388
00:19:54,148 --> 00:20:01,229
será de seis dígitos pero debemos crear

389
00:19:57,210 --> 00:20:04,379
un array que tenga un dígito más ese

390
00:20:01,230 --> 00:20:07,259
último dígito vacío se lo denomina null

391
00:20:04,378 --> 00:20:10,528
y a una cadena de caracteres con un

392
00:20:07,259 --> 00:20:14,579
carácter nulo al final se lo denomina

393
00:20:10,528 --> 00:20:17,548
string esto es porque luego con una

394
00:20:14,579 --> 00:20:21,298
función estaremos comparando ambos

395
00:20:17,548 --> 00:20:24,599
strings los de clave y clave maestra

396
00:20:21,298 --> 00:20:27,329
luego definimos un array también de

397
00:20:24,599 --> 00:20:30,209
siete y le cargamos la que será la

398
00:20:27,329 --> 00:20:33,720
contraseña con la cual debemos hacer la

399
00:20:30,210 --> 00:20:39,649
comparación que las llamamos clave guión

400
00:20:33,720 --> 00:20:43,499
bajo maestra 1 2 3 4 5 6 será la clave

401
00:20:39,648 --> 00:20:47,308
si bien tiene 6 dígitos y el array es de

402
00:20:43,499 --> 00:20:50,759
7 el último dígito será el nulo

403
00:20:47,308 --> 00:20:53,190
como vimos necesitamos de un índice para

404
00:20:50,759 --> 00:20:55,798
cargar el array con cada dígito

405
00:20:53,190 --> 00:20:59,129
individual que iremos cargando desde el

406
00:20:55,798 --> 00:21:02,369
teclado así que definiremos una variable

407
00:20:59,128 --> 00:21:05,638
llamada índice y le asignamos el valor

408
00:21:02,369 --> 00:21:08,758
de 0 de manera que ya quede apuntado al

409
00:21:05,638 --> 00:21:10,979
inicio de la rae ahora sí

410
00:21:08,759 --> 00:21:14,490
volviendo al loop lo que haremos es

411
00:21:10,980 --> 00:21:16,999
cargar el array clave con los caracteres

412
00:21:14,490 --> 00:21:19,798
que nos devuelva la función get que

413
00:21:16,999 --> 00:21:23,940
luego haremos la comparación con la

414
00:21:19,798 --> 00:21:28,200
clave maestra escribamos lo siguiente if

415
00:21:23,940 --> 00:21:33,840
entre paréntesis tecla

416
00:21:28,200 --> 00:21:39,889
clave entre corchetes índice igual la

417
00:21:33,839 --> 00:21:39,888
tecla índice más más

418
00:21:39,990 --> 00:21:47,589
serial punto print tecla

419
00:21:44,650 --> 00:21:50,680
en la variable tecla almacenamos el

420
00:21:47,589 --> 00:21:54,429
carácter que nos devuelve la función get

421
00:21:50,680 --> 00:21:58,269
que si no se presiona ninguna tecla la

422
00:21:54,430 --> 00:22:00,580
función devuelve un valor falso por eso

423
00:21:58,269 --> 00:22:03,519
para saber si se presiona alguna tecla

424
00:22:00,579 --> 00:22:05,319
solo debemos colocar la variable tecla

425
00:22:03,519 --> 00:22:08,950
como condición el if

426
00:22:05,319 --> 00:22:12,369
es decir que evaluar a verdadero si se

427
00:22:08,950 --> 00:22:16,019
presiona alguna tecla si es así entonces

428
00:22:12,369 --> 00:22:18,789
en la rai clave en el índice 0

429
00:22:16,019 --> 00:22:20,950
colocaremos el carácter correspondiente

430
00:22:18,789 --> 00:22:25,180
de la tecla presionada luego

431
00:22:20,950 --> 00:22:27,990
incrementamos el valor del índice en 1 y

432
00:22:25,180 --> 00:22:31,690
enviamos el valor por el monitor serial

433
00:22:27,990 --> 00:22:34,900
luego con otro if preguntamos si el

434
00:22:31,690 --> 00:22:37,420
índice llegó a 6 que equivale al hecho

435
00:22:34,900 --> 00:22:39,580
de haber ingresado los 6 dígitos de la

436
00:22:37,420 --> 00:22:46,650
contraseña del teclado

437
00:22:39,579 --> 00:22:48,990
y entre paréntesis índice igual igual 6

438
00:22:46,650 --> 00:22:51,570
si efectivamente ya tenemos ingresados

439
00:22:48,990 --> 00:22:54,539
los seis dígitos haremos la comparación

440
00:22:51,569 --> 00:22:56,849
con la clave maestra si aún no

441
00:22:54,539 --> 00:23:01,289
ingresamos la totalidad de los dígitos

442
00:22:56,849 --> 00:23:04,169
steve no se ejecuta y el loop vuelve a

443
00:23:01,289 --> 00:23:07,170
esperar a que se presione una tecla y

444
00:23:04,170 --> 00:23:09,930
almacenarla si por ejemplo recién

445
00:23:07,170 --> 00:23:12,480
acabamos de subir el programa arduino

446
00:23:09,930 --> 00:23:15,420
luego del primer dígito el valor del

447
00:23:12,480 --> 00:23:19,170
índice será 1 ya que lo incrementamos

448
00:23:15,420 --> 00:23:22,259
luego de almacenar el valor a este if

449
00:23:19,170 --> 00:23:25,560
no entraremos porque índice vale uno y

450
00:23:22,259 --> 00:23:27,779
aquí consultamos si vale seis sí ahora

451
00:23:25,559 --> 00:23:31,589
si ingresamos los seis dígitos de la

452
00:23:27,779 --> 00:23:34,049
contraseña con este y verificamos si la

453
00:23:31,589 --> 00:23:38,220
clave ingresada coincide con la clave

454
00:23:34,049 --> 00:23:41,169
maestra con la siguiente línea if entre

455
00:23:38,220 --> 00:23:46,289
paréntesis not

456
00:23:41,170 --> 00:23:50,410
string compeán entre paréntesis clave

457
00:23:46,289 --> 00:23:54,918
clave y un bajo maestra

458
00:23:50,410 --> 00:23:58,298
sería el punto print ln

459
00:23:54,919 --> 00:24:01,299
y entre comillas un espacio en blanco

460
00:23:58,298 --> 00:24:01,298
correcta

461
00:24:02,390 --> 00:24:10,600
sería el punto print ln

462
00:24:06,819 --> 00:24:15,329
y un espacio en blanco incorrecta y

463
00:24:10,599 --> 00:24:18,659
finalmente índice igual a cero

464
00:24:15,329 --> 00:24:22,500
este es todo el código del programa voy

465
00:24:18,660 --> 00:24:25,470
a explicar este último if utilizará el

466
00:24:22,500 --> 00:24:28,859
valor devuelto por la función string

467
00:24:25,470 --> 00:24:32,190
compeán si la comparación es exitosa

468
00:24:28,859 --> 00:24:35,299
devolver a cero nosotros sabemos que el

469
00:24:32,190 --> 00:24:39,690
if evaluar con una condición verdadera

470
00:24:35,299 --> 00:24:41,960
10 equivale una condición falsa entonces

471
00:24:39,690 --> 00:24:45,539
pondremos el símbolo de admiración

472
00:24:41,960 --> 00:24:48,450
delante del string comprar de manera de

473
00:24:45,539 --> 00:24:51,960
invertir el valor que nos devuelve en

474
00:24:48,450 --> 00:24:54,539
definitiva convierte el 0 que equivale a

475
00:24:51,960 --> 00:24:58,590
decir que la clave coincide con la clave

476
00:24:54,539 --> 00:25:01,829
maestra en un 1 que equivale a verdadero

477
00:24:58,589 --> 00:25:06,259
y entonces escribimos en el monitor

478
00:25:01,829 --> 00:25:08,759
serial la palabra correcta al else

479
00:25:06,259 --> 00:25:11,309
llegaremos si la condición es falsa

480
00:25:08,759 --> 00:25:13,980
indicando que la clave ingresada no

481
00:25:11,309 --> 00:25:17,639
coincide con la maestra por eso

482
00:25:13,980 --> 00:25:20,039
escribiremos incorrecta es importante

483
00:25:17,640 --> 00:25:23,640
notar que tanto delante de la palabra

484
00:25:20,039 --> 00:25:26,490
correcta como de incorrecta hay un

485
00:25:23,640 --> 00:25:28,920
espacio blanco eso es porque estuvimos

486
00:25:26,490 --> 00:25:31,620
escribiendo los dígitos ingresados

487
00:25:28,920 --> 00:25:35,700
mediante el teclado con sería el punto

488
00:25:31,619 --> 00:25:38,429
print el cual no deja espacios entonces

489
00:25:35,700 --> 00:25:41,160
luego de los seis dígitos dejamos un

490
00:25:38,430 --> 00:25:44,100
espacio en blanco y escribimos si es

491
00:25:41,160 --> 00:25:47,220
correcta o incorrecta para ambas

492
00:25:44,099 --> 00:25:51,059
situaciones se utilizan el serial punto

493
00:25:47,220 --> 00:25:55,259
print ln el cual deja un salto de línea

494
00:25:51,059 --> 00:25:58,230
al final vamos entonces a verificar y

495
00:25:55,259 --> 00:26:01,190
subir el programa luego a abrir el

496
00:25:58,230 --> 00:26:04,019
monitor serial y hagamos algunas pruebas

497
00:26:01,190 --> 00:26:09,610
ingresemos en principio la contraseña

498
00:26:04,019 --> 00:26:18,240
correcta que es 1 2 3 4 5

499
00:26:09,609 --> 00:26:22,058
presionamos el 1 y luego el 2 3 4 5 y 6

500
00:26:18,240 --> 00:26:24,460
al presionar el número 6 ya tenemos la

501
00:26:22,058 --> 00:26:26,950
totalidad de los dígitos por eso

502
00:26:24,460 --> 00:26:31,210
inmediatamente veremos que escribe la

503
00:26:26,950 --> 00:26:33,250
palabra correcta lo cual es cierto bien

504
00:26:31,210 --> 00:26:42,058
ahora coloquemos una contraseña

505
00:26:33,250 --> 00:26:44,700
incorrecta por ejemplo 1 3 4 6 7 y 9

506
00:26:42,058 --> 00:26:47,829
inmediatamente vemos que no se escribe

507
00:26:44,700 --> 00:26:50,048
incorrecta con lo cual verificamos que

508
00:26:47,829 --> 00:26:53,439
efectivamente está haciendo bien la

509
00:26:50,048 --> 00:26:58,429
comparación escribamos otra contraseña

510
00:26:53,440 --> 00:27:05,869
incorrecta usemos las letras por ejemplo

511
00:26:58,429 --> 00:27:07,909
b c 7 8 9 como es de esperar nos dice

512
00:27:05,868 --> 00:27:09,908
que es incorrecta

513
00:27:07,909 --> 00:27:12,580
finalmente para quedar totalmente

514
00:27:09,909 --> 00:27:14,960
seguros que no ha sido casualidad

515
00:27:12,579 --> 00:27:24,589
coloquemos nuevamente la contraseña

516
00:27:14,960 --> 00:27:28,038
correcta 1 2 3 4 5 6 y vemos que nos

517
00:27:24,589 --> 00:27:30,859
dice que es correcta perfecto ya

518
00:27:28,038 --> 00:27:34,158
verificamos que funciona correctamente y

519
00:27:30,859 --> 00:27:36,189
aprendimos a usar un teclado y comparar

520
00:27:34,159 --> 00:27:38,980
el valor ingresado con uno

521
00:27:36,190 --> 00:27:41,629
predeterminado en el proceso

522
00:27:38,980 --> 00:27:45,200
introdujimos varios conceptos que me

523
00:27:41,628 --> 00:27:48,829
gustaría recapitular vimos un nuevo tipo

524
00:27:45,200 --> 00:27:52,610
de variable que es byte vimos también

525
00:27:48,829 --> 00:27:55,908
que con esto hacemos que el valor no se

526
00:27:52,609 --> 00:27:59,689
pueda modificar con posterioridad vimos

527
00:27:55,909 --> 00:28:02,869
de qué se trata una raíz también la

528
00:27:59,690 --> 00:28:03,690
variable del tipo cara y como una cadena

529
00:28:02,868 --> 00:28:07,740
de cara

530
00:28:03,690 --> 00:28:11,070
eres conforman un string finalmente la

531
00:28:07,740 --> 00:28:15,450
función string comprar para comparar dos

532
00:28:11,069 --> 00:28:18,269
strings eso es todo por este capítulo en

533
00:28:15,450 --> 00:28:22,169
el próximo aprenderemos a utilizar una

534
00:28:18,269 --> 00:28:24,378
pantalla de lcd de 2 líneas y 16

535
00:28:22,169 --> 00:28:27,870
columnas para mostrar información

536
00:28:24,378 --> 00:28:30,178
directamente desde arduino como siempre

537
00:28:27,869 --> 00:28:32,668
les pido se suscriban para recibir

538
00:28:30,179 --> 00:28:35,129
notificaciones y por cualquier duda o

539
00:28:32,669 --> 00:28:38,159
comentario lo pueden hacer debajo que

540
00:28:35,128 --> 00:28:40,369
con gusto les responderé chau y hasta la

541
00:28:38,159 --> 00:28:40,370
próxima

