1
00:00:00,050 --> 00:00:06,620
hola a todos y bienvenidos al capítulo 4

2
00:00:03,290 --> 00:00:08,149
de arduino desde cero en español en esta

3
00:00:06,620 --> 00:00:11,120
oportunidad vamos a conectar un

4
00:00:08,148 --> 00:00:13,279
potenciómetro a una entrada analógica y

5
00:00:11,119 --> 00:00:15,739
con el mismo modificaremos el brillo de

6
00:00:13,279 --> 00:00:19,338
un led mediante la salida digital en

7
00:00:15,740 --> 00:00:21,618
modo wm vamos a comenzar haciendo el

8
00:00:19,338 --> 00:00:24,559
siguiente circuito en nuestra protoboard

9
00:00:21,618 --> 00:00:27,379
vamos a conectar el cátodo del led a más

10
00:00:24,559 --> 00:00:29,868
a una resistencia en serie con el ánodo

11
00:00:27,379 --> 00:00:31,788
para limitar la corriente y luego lo

12
00:00:29,868 --> 00:00:34,789
conectaremos directamente con un cable

13
00:00:31,789 --> 00:00:37,160
al pin digital número 3 y alimentamos la

14
00:00:34,789 --> 00:00:40,010
proto guardés de arduino ya en el

15
00:00:37,159 --> 00:00:42,648
capítulo 3 explicamos cómo conectar

16
00:00:40,009 --> 00:00:45,500
componentes externos mediante protoboard

17
00:00:42,649 --> 00:00:48,049
de manera que si no lo recuerdas puedes

18
00:00:45,500 --> 00:00:50,359
visitar el capítulo 3 eso es todo por

19
00:00:48,049 --> 00:00:52,669
ahora más adelante conectaremos el

20
00:00:50,359 --> 00:00:55,219
potenciómetro pero primero debemos

21
00:00:52,670 --> 00:00:57,559
entender el concepto de wm

22
00:00:55,219 --> 00:00:59,960
es decir la modulación por ancho de

23
00:00:57,558 --> 00:01:02,448
pulso y como la misma nos permite

24
00:00:59,960 --> 00:01:05,530
simular una tensión analógica sobre un

25
00:01:02,448 --> 00:01:08,048
pin digital en pantalla se muestran

26
00:01:05,530 --> 00:01:10,030
dos gráficos donde veremos los dos

27
00:01:08,049 --> 00:01:13,118
únicos estados que puede tener una

28
00:01:10,030 --> 00:01:16,150
salida digital estaremos viendo como la

29
00:01:13,118 --> 00:01:18,009
atención varía en función del tiempo en

30
00:01:16,150 --> 00:01:20,170
el gráfico de la izquierda podemos ver

31
00:01:18,009 --> 00:01:22,920
cómo se vería la señal si utilizamos la

32
00:01:20,170 --> 00:01:25,840
función digital write con un valor bajo

33
00:01:22,920 --> 00:01:27,939
la línea azul muestra un valor de

34
00:01:25,840 --> 00:01:30,880
tensión de 0 volts constante en el

35
00:01:27,939 --> 00:01:33,310
tiempo ya venimos usando digital write

36
00:01:30,879 --> 00:01:35,679
desde los capítulos anteriores con lo

37
00:01:33,310 --> 00:01:38,200
cual no será sorpresa ver que en el

38
00:01:35,680 --> 00:01:41,080
gráfico de la derecha tendremos un valor

39
00:01:38,200 --> 00:01:44,320
de 5 goles al aplicar un nivel alto con

40
00:01:41,079 --> 00:01:46,179
digital raid nada nuevo hasta aquí pero

41
00:01:44,319 --> 00:01:48,599
qué sucede si tenemos un bloque de

42
00:01:46,179 --> 00:01:51,189
código como el mostrado sobre la derecha

43
00:01:48,599 --> 00:01:54,250
utilizamos digital raid con un valor

44
00:01:51,189 --> 00:01:56,469
bajo y esperamos 20 milisegundos y

45
00:01:54,250 --> 00:01:59,259
aplicamos un nivel alto y luego

46
00:01:56,469 --> 00:02:02,200
esperamos otros 20 milisegundos

47
00:01:59,259 --> 00:02:04,450
este último delay al ser la última línea

48
00:02:02,200 --> 00:02:06,879
de nuestra función loop volverá a

49
00:02:04,450 --> 00:02:09,610
ejecutar la primera línea y así todo el

50
00:02:06,879 --> 00:02:10,909
tiempo lo que logramos es generar una

51
00:02:09,610 --> 00:02:12,650
señal

52
00:02:10,909 --> 00:02:15,049
se muestra en el gráfico sobre la

53
00:02:12,650 --> 00:02:17,990
izquierda era una señal que tiene un

54
00:02:15,050 --> 00:02:20,750
nivel bajo por 20 milisegundos luego un

55
00:02:17,990 --> 00:02:23,629
valor alto por otros 20 milisegundos y

56
00:02:20,750 --> 00:02:26,120
luego se repite por eso dibujamos una

57
00:02:23,629 --> 00:02:29,180
línea roja en el momento en que la señal

58
00:02:26,120 --> 00:02:31,280
se repite de aquí obtendremos dos

59
00:02:29,180 --> 00:02:34,939
conceptos fundamentales de las señales

60
00:02:31,280 --> 00:02:36,949
el periodo y la frecuencia el periodo

61
00:02:34,939 --> 00:02:40,579
será el tiempo que aparece marcado con

62
00:02:36,949 --> 00:02:43,729
la letra t mayúscula es decir 40 40

63
00:02:40,580 --> 00:02:46,730
milisegundos es el tiempo desde que se

64
00:02:43,729 --> 00:02:49,129
inicia la señal hasta que luego vuelve a

65
00:02:46,729 --> 00:02:51,560
repetir el ciclo del periodo se

66
00:02:49,129 --> 00:02:53,960
desprende el concepto de frecuencia de

67
00:02:51,560 --> 00:02:57,379
una señal siendo la frecuencia la

68
00:02:53,960 --> 00:03:00,530
inversa del periodo es decir 1 dividido

69
00:02:57,379 --> 00:03:03,039
el periodo el periodo lo vamos a pasar a

70
00:03:00,530 --> 00:03:08,539
segundos por esos 40 milisegundos

71
00:03:03,039 --> 00:03:13,430
equivalen a 0 04 segundos si hacemos 1 /

72
00:03:08,539 --> 00:03:15,379
2 004 nos da 25 la unidad de medida de

73
00:03:13,430 --> 00:03:17,870
frecuencia es el xerez

74
00:03:15,379 --> 00:03:20,479
qué es lo mismo que decir ciclos por

75
00:03:17,870 --> 00:03:22,310
segundo es decir que la señal que

76
00:03:20,479 --> 00:03:25,819
acabamos de crear tiene unas frecuencias

77
00:03:22,310 --> 00:03:28,039
de 25 hertz vamos a definir otro

78
00:03:25,819 --> 00:03:30,949
concepto ahora que sabemos de qué se

79
00:03:28,039 --> 00:03:33,469
trata el periodo y la frecuencia este

80
00:03:30,949 --> 00:03:36,319
será el ciclo de trabajo o de yuty cycle

81
00:03:33,469 --> 00:03:38,240
en inglés es muy sencillo y se define

82
00:03:36,319 --> 00:03:41,569
como la relación entre el tiempo que la

83
00:03:38,240 --> 00:03:44,030
señal está activa en el periodo el

84
00:03:41,569 --> 00:03:46,219
gráfico de la izquierda es exactamente

85
00:03:44,030 --> 00:03:49,280
la misma señal que creamos con

86
00:03:46,219 --> 00:03:52,310
anterioridad este es el período de la

87
00:03:49,280 --> 00:03:54,009
misma podemos ver claramente la parte de

88
00:03:52,310 --> 00:03:56,689
la señal que tiene un estado activo

89
00:03:54,009 --> 00:03:59,359
vemos que la mitad del periodo tiene un

90
00:03:56,689 --> 00:04:02,719
nivel bajo la otra mitad tiene un nivel

91
00:03:59,360 --> 00:04:06,950
alto es decir que esta será la zona

92
00:04:02,719 --> 00:04:08,750
activa y es un 50% del periodo total es

93
00:04:06,949 --> 00:04:11,569
decir que esta señal tiene un ciclo de

94
00:04:08,750 --> 00:04:15,319
trabajo que se escribe con la letra de

95
00:04:11,569 --> 00:04:19,310
mayúscula de 50 por ciento o en otras

96
00:04:15,319 --> 00:04:21,199
palabras el 50% del tiempo la señal

97
00:04:19,310 --> 00:04:23,420
tiene un estado alto

98
00:04:21,199 --> 00:04:26,269
toda esta introducción es para llegar al

99
00:04:23,420 --> 00:04:29,449
concepto final quiero ilustrar en esta

100
00:04:26,269 --> 00:04:33,799
imagen con tres ejemplos distintos donde

101
00:04:29,449 --> 00:04:37,279
se introduce el concepto de wm wpm de

102
00:04:33,800 --> 00:04:40,189
modulación por ancho de pulso modulación

103
00:04:37,279 --> 00:04:42,109
es lo mismo que decir modificar es decir

104
00:04:40,189 --> 00:04:45,230
que estaremos modificando el ancho del

105
00:04:42,110 --> 00:04:47,990
pulso y como ya vimos eso lleva a un

106
00:04:45,230 --> 00:04:50,629
cambio en su ciclo de trabajo si el

107
00:04:47,990 --> 00:04:52,670
periodo de nuestra señal es pequeña o lo

108
00:04:50,629 --> 00:04:55,610
que es lo mismo la frecuencia es alta

109
00:04:52,670 --> 00:04:58,610
obtendremos una tensión en la salida de

110
00:04:55,610 --> 00:05:01,370
un pin digital que puede ser menor a 5

111
00:04:58,610 --> 00:05:03,860
volts es una tensión simulada ya que

112
00:05:01,370 --> 00:05:06,889
como vimos una salida puede tener sólo

113
00:05:03,860 --> 00:05:09,560
dos estados pero si logramos modificar

114
00:05:06,889 --> 00:05:12,379
el ciclo de trabajo de una señal a una

115
00:05:09,560 --> 00:05:15,530
frecuencia alta lograremos obtener esta

116
00:05:12,379 --> 00:05:18,800
tensión que se aproxima a una analógica

117
00:05:15,529 --> 00:05:21,769
para que quede claro el concepto veamos

118
00:05:18,800 --> 00:05:24,259
el primer gráfico de la izquierda en

119
00:05:21,769 --> 00:05:26,719
todos los casos el periodo t es siempre

120
00:05:24,259 --> 00:05:26,990
el mismo lo que haremos es modificar el

121
00:05:26,720 --> 00:05:29,810
año

122
00:05:26,990 --> 00:05:33,050
el pulso aquí vemos que si tenemos un

123
00:05:29,810 --> 00:05:36,350
ancho de pulso que es el 20% del periodo

124
00:05:33,050 --> 00:05:36,860
es decir un ciclo de trabajo del 20 por

125
00:05:36,350 --> 00:05:39,230
ciento

126
00:05:36,860 --> 00:05:44,180
tendremos una tensión a la salida

127
00:05:39,230 --> 00:05:46,730
equivalente a un volt colocó b ef ya que

128
00:05:44,180 --> 00:05:50,000
es una atención eficaz no es una tensión

129
00:05:46,730 --> 00:05:52,189
verdadera la estamos simulando cómo

130
00:05:50,000 --> 00:05:57,290
llegó el valor de un volt muy sencillo

131
00:05:52,189 --> 00:06:00,769
es el 20% de 5 volts el 20% de 5 volts

132
00:05:57,290 --> 00:06:02,900
es un volt veamos el ejemplo del gráfico

133
00:06:00,769 --> 00:06:05,870
central tenemos la señal con la que

134
00:06:02,899 --> 00:06:09,139
comenzamos la explicación una señal con

135
00:06:05,870 --> 00:06:11,800
un ciclo de trabajo del 50% es decir que

136
00:06:09,139 --> 00:06:17,569
la atención eficaz que tendremos será de

137
00:06:11,800 --> 00:06:19,430
25 volts es decir un 50% de 5 volts se

138
00:06:17,569 --> 00:06:21,589
va entendiendo verdad

139
00:06:19,430 --> 00:06:23,209
por último el gráfico de la derecha

140
00:06:21,589 --> 00:06:25,699
muestra una señal con un ciclo de

141
00:06:23,209 --> 00:06:28,789
trabajo del 80 por ciento entonces

142
00:06:25,699 --> 00:06:32,539
tendremos una atención eficaz de 4 volts

143
00:06:28,790 --> 00:06:34,250
es decir un 80 por ciento de 5 volts

144
00:06:32,540 --> 00:06:36,710
claro está que estos son solo algunos

145
00:06:34,250 --> 00:06:40,370
ejemplos para ilustrar cómo generamos

146
00:06:36,709 --> 00:06:43,099
una atención entre comillas analógica a

147
00:06:40,370 --> 00:06:45,259
partir de una digital variando el ciclo

148
00:06:43,100 --> 00:06:48,980
de trabajo obtendremos distintas

149
00:06:45,259 --> 00:06:51,230
tensiones entre 0 y 5 volts es

150
00:06:48,980 --> 00:06:53,930
importante saber que no todos los pines

151
00:06:51,230 --> 00:06:57,950
digitales de arduino tienen capacidad de

152
00:06:53,930 --> 00:07:01,400
w m en el caso de arduino 1 si vemos en

153
00:06:57,949 --> 00:07:05,449
la placa la fila de pines digitales dice

154
00:07:01,399 --> 00:07:07,969
p w m con un símbolo entre paréntesis es

155
00:07:05,449 --> 00:07:11,959
decir que sólo los pines identificados

156
00:07:07,970 --> 00:07:18,830
con dicho símbolo servirán para wm que

157
00:07:11,959 --> 00:07:20,930
son los pines 3 5 6 9 10 y 11 vamos

158
00:07:18,829 --> 00:07:24,620
directamente a hacer un programa para

159
00:07:20,930 --> 00:07:28,100
mostrar cómo se aplica pondremos un led

160
00:07:24,620 --> 00:07:30,410
o igual a 3 ya que tenemos el er

161
00:07:28,100 --> 00:07:33,080
conectado al pin 3 luego hacemos la

162
00:07:30,410 --> 00:07:35,830
función setup y definimos al pin 3 como

163
00:07:33,079 --> 00:07:39,370
salida pin mode

164
00:07:35,829 --> 00:07:41,909
output ahora hacemos la función loop y

165
00:07:39,370 --> 00:07:45,250
colocamos la siguiente nueva función

166
00:07:41,910 --> 00:07:48,310
analog write al igual que el digital

167
00:07:45,250 --> 00:07:50,829
write debemos especificar el número de

168
00:07:48,310 --> 00:07:54,100
pin nosotros tenemos para eso la

169
00:07:50,829 --> 00:07:56,399
variable led y como segundo parámetro es

170
00:07:54,100 --> 00:08:01,180
aquí la diferencia con digital write

171
00:07:56,399 --> 00:08:06,519
pondremos especificar un valor entre 0 y

172
00:08:01,180 --> 00:08:09,220
255 donde 0 equivale a 0 volts y 255

173
00:08:06,519 --> 00:08:11,879
equivale a 5 bots si por ejemplo

174
00:08:09,220 --> 00:08:17,080
queremos tener una atención simulada de

175
00:08:11,879 --> 00:08:21,399
25 volts pondremos el valor 127 es decir

176
00:08:17,079 --> 00:08:24,159
la mitad de 255 la división da un valor

177
00:08:21,399 --> 00:08:25,839
con coma pero solo nos quedaremos con la

178
00:08:24,160 --> 00:08:27,730
parte entera

179
00:08:25,839 --> 00:08:30,669
hay que imaginarse que nosotros estamos

180
00:08:27,730 --> 00:08:32,220
en planta baja de un edificio y queremos

181
00:08:30,670 --> 00:08:36,279
ir al primer piso

182
00:08:32,220 --> 00:08:39,129
tenemos una escalera con 255 peldaños o

183
00:08:36,279 --> 00:08:42,158
escalones ahora imaginemos que planta

184
00:08:39,129 --> 00:08:47,350
baja son 0 volts y el primer piso

185
00:08:42,158 --> 00:08:49,899
5 volts y hay 255 tramos para llegar si

186
00:08:47,350 --> 00:08:52,569
comenzamos a subir la escalera estaremos

187
00:08:49,899 --> 00:08:54,429
cada vez más cerca de los 5 volts si

188
00:08:52,568 --> 00:08:57,849
estamos a mitad de camino habiendo

189
00:08:54,429 --> 00:09:01,508
recorrido 127 tramos estaremos por la

190
00:08:57,850 --> 00:09:03,670
mitad es decir 25 volts y así hasta

191
00:09:01,509 --> 00:09:08,470
llegar hasta el primer piso y el valor

192
00:09:03,669 --> 00:09:10,448
máximo de 255 muy bien entonces si

193
00:09:08,470 --> 00:09:13,778
quiero encender el led a la mitad de su

194
00:09:10,448 --> 00:09:19,269
máximo brillo pondré analog raid entre

195
00:09:13,778 --> 00:09:23,139
paréntesis led coma 127 y listo si pongo

196
00:09:19,269 --> 00:09:25,720
0 lo estoy apagando si pongo 255 estará

197
00:09:23,139 --> 00:09:28,480
con brillo máximo la función hará los

198
00:09:25,720 --> 00:09:30,639
wright se encarga por nosotros de

199
00:09:28,480 --> 00:09:33,970
generar la señal con la frecuencia

200
00:09:30,639 --> 00:09:35,980
correcta y modular el ancho del pulso

201
00:09:33,970 --> 00:09:38,889
me imagino que estarás pensando en este

202
00:09:35,980 --> 00:09:40,990
momento después de tanta introducción

203
00:09:38,889 --> 00:09:44,620
con los gráficos y demás cuestiones

204
00:09:40,990 --> 00:09:47,049
bueno la idea es aprender conceptos a

205
00:09:44,620 --> 00:09:49,810
medida que lo vamos necesitando

206
00:09:47,049 --> 00:09:52,509
explicar la función analog right sin

207
00:09:49,809 --> 00:09:54,849
haber visto la parte teórica podría

208
00:09:52,509 --> 00:09:57,549
dejar a la imaginación de como una

209
00:09:54,850 --> 00:10:00,490
salida digital por arte de magia puede

210
00:09:57,549 --> 00:10:03,699
brindar una atención analógica ahora ya

211
00:10:00,490 --> 00:10:06,549
sabemos que no es ninguna magia es solo

212
00:10:03,700 --> 00:10:08,740
un truco de arduino podríamos probar ya

213
00:10:06,549 --> 00:10:11,349
mismo este código y veríamos el led de

214
00:10:08,740 --> 00:10:13,360
encendido a mitad de brillo pero

215
00:10:11,350 --> 00:10:16,180
aprovecharemos la oportunidad de hacer

216
00:10:13,360 --> 00:10:20,500
un interesante efecto visual gracias al

217
00:10:16,179 --> 00:10:23,739
uso de la sentencia por form pertenece

218
00:10:20,500 --> 00:10:26,919
al grupo de los bucles o lazos es decir

219
00:10:23,740 --> 00:10:30,278
que repetirá un bloque de código basado

220
00:10:26,919 --> 00:10:33,449
en una condición ya vimos el bucle while

221
00:10:30,278 --> 00:10:35,559
en el capítulo 3 el cual repetía

222
00:10:33,450 --> 00:10:39,100
infinitamente mientras la condición

223
00:10:35,559 --> 00:10:41,500
fuese verdadera en caso del bucle for

224
00:10:39,100 --> 00:10:44,680
repetir a una determinada cantidad de

225
00:10:41,500 --> 00:10:47,889
veces antes de salir vamos a escribir lo

226
00:10:44,679 --> 00:10:50,679
siguiente y lo vemos borremos primero el

227
00:10:47,889 --> 00:10:54,970
análogo write y escribamos

228
00:10:50,679 --> 00:11:01,719
por entre paréntesis brillo igual a cero

229
00:10:54,970 --> 00:11:04,750
punto y coma brillo menor a 256 punto y

230
00:11:01,720 --> 00:11:08,560
coma brillo más más

231
00:11:04,750 --> 00:11:12,250
cerramos paréntesis abrimos llaves enter

232
00:11:08,559 --> 00:11:14,559
y como siempre nos deja un espacio libre

233
00:11:12,250 --> 00:11:17,730
y cierra la llave

234
00:11:14,559 --> 00:11:20,709
el bucle for requiere de tres parámetros

235
00:11:17,730 --> 00:11:23,800
el primero es el valor inicial de la

236
00:11:20,710 --> 00:11:26,950
variable en este caso usaremos la ya

237
00:11:23,799 --> 00:11:29,889
definida variable brillo y le asignamos

238
00:11:26,950 --> 00:11:34,028
un valor de cero ya que comenzaremos con

239
00:11:29,889 --> 00:11:36,789
led apagado luego punto y coma ojo y no

240
00:11:34,028 --> 00:11:41,649
confundirse con la coma aquí bajo punto

241
00:11:36,789 --> 00:11:45,610
y coma brillo menor a 256 y finalmente

242
00:11:41,649 --> 00:11:49,659
brilló más más que equivale a escribir

243
00:11:45,610 --> 00:11:52,528
brillo igual a brillo más 1 es sólo una

244
00:11:49,659 --> 00:11:54,600
forma abreviada de escribir lo mismo

245
00:11:52,528 --> 00:11:58,078
el bucle for funciona de la siguiente

246
00:11:54,600 --> 00:12:01,170
manera arrancamos con brillo igual a 0

247
00:11:58,078 --> 00:12:04,679
luego del punto y coma va la condición a

248
00:12:01,169 --> 00:12:09,269
evaluar si es cierta ejecutará el código

249
00:12:04,679 --> 00:12:11,878
entre sus llaves si evalúa falso sale y

250
00:12:09,269 --> 00:12:14,068
finalmente el incremento que debe

251
00:12:11,879 --> 00:12:15,959
asignarse a la variable cada vez que se

252
00:12:14,068 --> 00:12:19,289
ejecuta el bucle es también llamada

253
00:12:15,958 --> 00:12:21,948
iteración es decir que brillo tendrá un

254
00:12:19,289 --> 00:12:24,808
valor de 0 la primera vez que se ejecute

255
00:12:21,948 --> 00:12:29,099
luego tendrá un valor de 1 luego un

256
00:12:24,808 --> 00:12:30,929
valor de 2 y así hasta 255 ahora

257
00:12:29,100 --> 00:12:33,600
simplemente debemos escribir lo

258
00:12:30,929 --> 00:12:37,458
siguiente dentro de las llaves del bucle

259
00:12:33,600 --> 00:12:42,058
form análogo write entre paréntesis led

260
00:12:37,458 --> 00:12:45,388
coma brillo analog write como vimos toma

261
00:12:42,058 --> 00:12:49,438
como segundo parámetro un número entre 0

262
00:12:45,389 --> 00:12:52,350
y 255 y eso es lo que vamos a asignarle

263
00:12:49,438 --> 00:12:55,049
mediante la variable brillo cada vez que

264
00:12:52,350 --> 00:12:56,879
se ejecuta el bucle form brillo se

265
00:12:55,049 --> 00:13:00,000
incrementará en 1

266
00:12:56,879 --> 00:13:02,669
finalmente deberemos aplicar una pequeña

267
00:13:00,000 --> 00:13:05,669
demora si no lo haría tan rápido que no

268
00:13:02,669 --> 00:13:09,990
podríamos ver por eso pondremos delay

269
00:13:05,669 --> 00:13:12,829
entre paréntesis 15 aplicando una demora

270
00:13:09,990 --> 00:13:15,600
de 15 milisegundos en cada incremento

271
00:13:12,830 --> 00:13:18,240
este bloque de código hará que el led

272
00:13:15,600 --> 00:13:21,269
comience apagado es decir con un brillo

273
00:13:18,240 --> 00:13:25,500
de 0 y lentamente aumente su brillo

274
00:13:21,269 --> 00:13:28,500
hasta llegar al máximo de 255 bonito

275
00:13:25,500 --> 00:13:31,049
pero si lo dejamos así una vez que llega

276
00:13:28,500 --> 00:13:33,059
al valor del brillo máximo el loop

277
00:13:31,049 --> 00:13:36,059
volver a ejecutar la primer línea

278
00:13:33,059 --> 00:13:38,579
haciendo que el led de forma brusca se

279
00:13:36,059 --> 00:13:41,159
apague si queremos que una vez que

280
00:13:38,580 --> 00:13:44,310
llegue al brillo máximo luego baje

281
00:13:41,159 --> 00:13:47,759
nuevamente a brillo 0 lentamente

282
00:13:44,309 --> 00:13:50,579
deberemos usar otro bucle form pero de

283
00:13:47,759 --> 00:13:52,409
manera que decremento el valor lo vamos

284
00:13:50,580 --> 00:13:54,960
a hacer para que quede también bien

285
00:13:52,409 --> 00:13:58,350
fijado el concepto de este tipo de bucle

286
00:13:54,960 --> 00:14:01,350
muy usado en programación vamos a copiar

287
00:13:58,350 --> 00:14:03,570
todo el bloque del foro

288
00:14:01,350 --> 00:14:06,570
olvidarse de seleccionar bien las llaves

289
00:14:03,570 --> 00:14:10,080
que le corresponden luego en una línea

290
00:14:06,570 --> 00:14:12,690
en blanco pegamos esto es porque el

291
00:14:10,080 --> 00:14:15,480
código es casi el mismo y sólo requiere

292
00:14:12,690 --> 00:14:19,110
de unos pequeños cambios brillo lo

293
00:14:15,480 --> 00:14:22,230
pondremos igual a 255 ya que iniciamos

294
00:14:19,110 --> 00:14:25,350
esta sección con el led a su máximo

295
00:14:22,230 --> 00:14:31,500
valor de brillo luego en la condición

296
00:14:25,350 --> 00:14:33,480
pondremos brillo mayor igual 0 es decir

297
00:14:31,500 --> 00:14:37,440
que se ejecutará mientras que el valor

298
00:14:33,480 --> 00:14:39,870
de brillo sea mayor o igual a 0

299
00:14:37,440 --> 00:14:42,570
y finalmente decíamos que el valor de

300
00:14:39,870 --> 00:14:46,590
brillo vaya de incrementando en cada

301
00:14:42,570 --> 00:14:50,040
iteración por eso cambiamos el + más por

302
00:14:46,590 --> 00:14:52,610
menos menos lo que hará este bucle for

303
00:14:50,039 --> 00:14:55,349
es exactamente lo opuesto al anterior

304
00:14:52,610 --> 00:14:58,980
comenzará con el led con un brillo

305
00:14:55,350 --> 00:15:00,360
máximo e irá bajando el mismo lentamente

306
00:14:58,980 --> 00:15:03,269
hasta quedar apagado

307
00:15:00,360 --> 00:15:05,329
ahora si verificamos el código y lo

308
00:15:03,269 --> 00:15:07,860
subimos a la placa para ver si funciona

309
00:15:05,328 --> 00:15:10,679
en caso de un error de sintaxis

310
00:15:07,860 --> 00:15:13,169
verificar que toda llave que se abre

311
00:15:10,679 --> 00:15:15,479
tenga una llave correspondiente que se

312
00:15:13,169 --> 00:15:20,179
cierra también que los parámetros dentro

313
00:15:15,480 --> 00:15:20,180
del foro va separados por punto y coma

314
00:15:39,458 --> 00:15:46,248
muy bien ya probamos cómo funciona la

315
00:15:42,889 --> 00:15:48,230
salida p w m y la usamos para modificar

316
00:15:46,249 --> 00:15:50,659
el brillo de un led ahora nos

317
00:15:48,230 --> 00:15:52,009
centraremos en la entrada analógica que

318
00:15:50,659 --> 00:15:55,009
la comanda haremos mediante un

319
00:15:52,009 --> 00:15:57,499
potenciómetro armemos en la proto gara

320
00:15:55,009 --> 00:16:00,318
el siguiente circuito coloquemos el

321
00:15:57,499 --> 00:16:03,230
potenciómetro de 10 k las patas del

322
00:16:00,318 --> 00:16:05,178
potenciómetro suelen ser ligeramente más

323
00:16:03,230 --> 00:16:07,369
gruesas que los pines de un led o

324
00:16:05,178 --> 00:16:09,980
pulsador pero entran bien en la

325
00:16:07,369 --> 00:16:12,709
protoboard solo hay que ejercer algo más

326
00:16:09,980 --> 00:16:15,289
de presión conectaremos la pata del

327
00:16:12,708 --> 00:16:18,318
extremo izquierdo mediante un cable a

328
00:16:15,289 --> 00:16:21,259
más y la pata del extremo derecho al

329
00:16:18,318 --> 00:16:23,899
positivo del riel de tensión de la pata

330
00:16:21,259 --> 00:16:27,558
central iremos directamente con un cable

331
00:16:23,899 --> 00:16:30,490
al pin identificado como a 0 sobre la

332
00:16:27,558 --> 00:16:33,289
fila de pines en la sección análogo y

333
00:16:30,490 --> 00:16:36,829
eso es todo por parte del circuito como

334
00:16:33,289 --> 00:16:38,568
verán muy sencillo ahora el código como

335
00:16:36,828 --> 00:16:40,659
ahora tenemos un nuevo componente en

336
00:16:38,568 --> 00:16:43,849
nuestra protoboard que interactuará

337
00:16:40,659 --> 00:16:46,100
mediante la entrada analógica a 0

338
00:16:43,850 --> 00:16:49,159
deberemos declarar una nueva variable

339
00:16:46,100 --> 00:16:51,769
que la llamaremos pot y le asignaremos

340
00:16:49,159 --> 00:16:54,559
un valor de 0 ya que se trata de la

341
00:16:51,769 --> 00:16:58,610
entrada del pin 0 de la sección

342
00:16:54,559 --> 00:17:01,609
analógica en setup no definiremos el pin

343
00:16:58,610 --> 00:17:04,370
0 como entrada ya que la sección

344
00:17:01,610 --> 00:17:06,500
analógica se puede usar únicamente como

345
00:17:04,369 --> 00:17:09,859
entrada con lo cual no requiere

346
00:17:06,500 --> 00:17:12,078
inicialización igual pondremos el

347
00:17:09,859 --> 00:17:16,009
siguiente comentario para recordarlo

348
00:17:12,078 --> 00:17:20,349
barra barra y escribimos las entradas

349
00:17:16,009 --> 00:17:23,240
analógicas no requieren inicialización

350
00:17:20,349 --> 00:17:26,808
vamos al loop y eliminamos todo el

351
00:17:23,240 --> 00:17:29,210
código entre sus llaves y con sólo dos

352
00:17:26,808 --> 00:17:31,250
líneas podremos leer el valor de la

353
00:17:29,210 --> 00:17:33,470
entrada analógica y asignarle a la

354
00:17:31,250 --> 00:17:37,490
salida para modificar el brillo del led

355
00:17:33,470 --> 00:17:42,429
con el potenciómetro escribiremos brillo

356
00:17:37,490 --> 00:17:47,480
es igual a analog read entre paréntesis

357
00:17:42,429 --> 00:17:52,669
luego análogo write entre paréntesis led

358
00:17:47,480 --> 00:17:56,000
como brillo analog read al igual que la

359
00:17:52,669 --> 00:17:59,120
ya utilizada digital ruiz solo requiere

360
00:17:56,000 --> 00:18:01,730
un parámetro y es el número del pin en

361
00:17:59,119 --> 00:18:05,779
nuestro caso ya definimos una variable

362
00:18:01,730 --> 00:18:09,110
llamada pod con el valor 0 luego con

363
00:18:05,779 --> 00:18:12,519
alan white escribiremos el valor leído

364
00:18:09,109 --> 00:18:14,928
en el led perfecto sólo un detalle

365
00:18:12,519 --> 00:18:19,150
estuvimos hablando hace instantes que

366
00:18:14,929 --> 00:18:22,640
analog raid requiere valores entre 0 y

367
00:18:19,150 --> 00:18:25,280
255 resulta que cuando trabajamos con

368
00:18:22,640 --> 00:18:27,860
una entrada analógica el valor que nos

369
00:18:25,279 --> 00:18:32,569
devuelve la misma usa otro rango de

370
00:18:27,859 --> 00:18:34,579
valores que es de 0 a 1.023 esto se debe

371
00:18:32,569 --> 00:18:37,129
a que arduino tiene circuitos internos

372
00:18:34,579 --> 00:18:41,269
especiales destinados para las entradas

373
00:18:37,130 --> 00:18:44,270
analógicas por eso estas entradas no

374
00:18:41,269 --> 00:18:46,940
pueden usarse igualmente como salidas

375
00:18:44,269 --> 00:18:49,879
como en el caso de los pines digitales

376
00:18:46,940 --> 00:18:51,259
lo positivo es que tenemos una mayor

377
00:18:49,880 --> 00:18:52,610
resolución

378
00:18:51,259 --> 00:18:55,009
podremos ver con más

379
00:18:52,609 --> 00:18:58,129
precisión valores de tensiones de

380
00:18:55,009 --> 00:19:00,710
entrada si recuerdan cuando hablamos de

381
00:18:58,130 --> 00:19:03,980
analog right decíamos que era como

382
00:19:00,710 --> 00:19:08,120
obtener una escalera de 255 escalones

383
00:19:03,980 --> 00:19:11,420
para ir de 0 a 5 volts ahora con analog

384
00:19:08,119 --> 00:19:16,399
read tendremos cuatro veces más

385
00:19:11,420 --> 00:19:19,759
escalones es decir me1023 para ir de 0 a

386
00:19:16,400 --> 00:19:22,610
5 volts de tensión de entrada en

387
00:19:19,759 --> 00:19:25,190
definitiva no podemos utilizar de forma

388
00:19:22,609 --> 00:19:28,279
directa el valor que nos devuelve analog

389
00:19:25,190 --> 00:19:31,400
river para encender el led con la

390
00:19:28,279 --> 00:19:35,599
función análogo right ya que el primero

391
00:19:31,400 --> 00:19:39,890
tiene un rango de 0 a 1.023 y el segundo

392
00:19:35,599 --> 00:19:42,859
un rango de 0 a 255 hay una solución muy

393
00:19:39,890 --> 00:19:46,460
sencilla el tema y simplemente consta en

394
00:19:42,859 --> 00:19:49,789
dividir por 4 el valor que análogo reed

395
00:19:46,460 --> 00:19:53,600
antes de asignarlo a la variable brillo

396
00:19:49,789 --> 00:19:57,289
de esa manera si con análogo estamos

397
00:19:53,599 --> 00:20:03,139
leyendo 5 balls equivalente al número

398
00:19:57,289 --> 00:20:05,779
1000 23 al dividir por 4 obtenemos 255

399
00:20:03,140 --> 00:20:08,120
que justamente el valor máximo que

400
00:20:05,779 --> 00:20:13,599
permite análogo wright

401
00:20:08,119 --> 00:20:15,199
si bien la división de 1.023 en 4 da 255

402
00:20:13,599 --> 00:20:17,029
75

403
00:20:15,200 --> 00:20:19,610
estamos trabajando con números enteros

404
00:20:17,029 --> 00:20:23,149
con lo cual la parte de la fracción se

405
00:20:19,609 --> 00:20:27,469
desestima entonces a la siguiente línea

406
00:20:23,150 --> 00:20:31,430
le agregaremos barra 4 barra es el

407
00:20:27,470 --> 00:20:34,549
símbolo de dividido así que la variable

408
00:20:31,430 --> 00:20:37,240
brillo estará siempre en rango para

409
00:20:34,549 --> 00:20:39,919
luego usarla en análogo write

410
00:20:37,240 --> 00:20:43,750
verifiquemos y subamos el código a la

411
00:20:39,920 --> 00:20:43,750
placa para ver cómo funciona

412
00:20:52,220 --> 00:20:59,960
magnífico al girar el potenciómetro

413
00:20:55,079 --> 00:20:59,960
vemos cómo varía la intensidad del led

414
00:21:01,839 --> 00:21:07,028
eso es todo por este capítulo en el

415
00:21:04,509 --> 00:21:09,940
próximo estaremos conectando un sensor

416
00:21:07,028 --> 00:21:13,450
ultrasónico para medir distancias entre

417
00:21:09,940 --> 00:21:16,390
objetos y detectar obstáculos también

418
00:21:13,450 --> 00:21:19,090
usaremos el monitor serial para obtener

419
00:21:16,390 --> 00:21:22,390
información desde arduino sin necesidad

420
00:21:19,089 --> 00:21:24,038
de componentes externos como siempre les

421
00:21:22,390 --> 00:21:26,500
pido se suscriban para recibir

422
00:21:24,038 --> 00:21:29,079
notificaciones y por cualquier duda o

423
00:21:26,500 --> 00:21:31,869
comentario lo pueden hacer debajo que

424
00:21:29,079 --> 00:21:34,079
con gusto les responderé chau y hasta la

425
00:21:31,869 --> 00:21:34,079
próxima

